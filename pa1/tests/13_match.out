fn
ID(main)
(
)
{
let
ID(number)
=
LITDEC(13)
;
match
ID(number)
{
LITDEC(1)
=>
{
}
,
LITDEC(2)
|
LITDEC(3)
|
LITDEC(5)
|
LITDEC(7)
|
LITDEC(11)
=>
{
}
,
LITDEC(13)
...
LITDEC(19)
=>
{
}
,
ID(_)
=>
{
}
,
}
let
ID(boolean)
=
LITBOOL(true)
;
let
ID(binary)
=
match
ID(boolean)
{
LITBOOL(false)
=>
LITDEC(0)
,
LITBOOL(true)
=>
LITDEC(1)
,
}
;
}
