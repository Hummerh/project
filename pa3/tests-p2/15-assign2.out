
(crate:ERROR!
    (items
        (struct-def:ok!
            (id
                (Cat))
            (field-defs
                (field-def
                    (id
                        (x))
                    (type-i32))
                (field-def
                    (id
                        (y))
                    (type-arr
                        (type-i32)
                        (lit-dec)))))
        (fn-def:ERROR!
            (id
                (main))
            (type-unit)
            (block:ERROR!
                (let:()
                    (pat-id
                        (id
                            (x)))
                    (type-i32)
                    (lit-dec:i32))
                (stmt-exp:ERROR!
                    (assign:ERROR!
                        (id:i32
                            (x))
                        (lit-dec:i32)))
                (stmt-exp:ERROR!
                    (assign-add:ERROR!
                        (id:i32
                            (x))
                        (add:i32
                            (lit-dec:i32)
                            (id:i32
                                (x)))))
                (stmt-exp:ERROR!
                    (assign-mul:ERROR!
                        (id:i32
                            (x))
                        (mul:i32
                            (id:i32
                                (x))
                            (lit-dec:i32))))
                (stmt-exp:ERROR!
                    (assign-div:ERROR!
                        (id:i32
                            (x))
                        (div:i32
                            (lit-dec:i32)
                            (id:i32
                                (x)))))
                (stmt-exp:ERROR!
                    (assign-rem:ERROR!
                        (id:i32
                            (x))
                        (rem:i32
                            (id:i32
                                (x))
                            (lit-dec:i32))))
                (let:()
                    (pat-id
                        (id
                            (a)))
                    (type-bool)
                    (true:bool))
                (stmt-exp:ERROR!
                    (assign:ERROR!
                        (id:bool
                            (a))
                        (and:bool
                            (true:bool)
                            (id:bool
                                (a)))))
                (stmt-exp:ERROR!
                    (assign:ERROR!
                        (id:bool
                            (a))
                        (or:bool
                            (id:bool
                                (a))
                            (false:bool))))
                (let:()
                    (pat-id
                        (id
                            (a)))
                    (type-arr
                        (type-i32)
                        (lit-dec))
                    (arr:[i32;2]
                        (exprs
                            (lit-dec:i32)
                            (lit-dec:i32))))
                (stmt-exp:ERROR!
                    (assign:ERROR!
                        (arr-index:i32
                            (id:[i32;2]
                                (a))
                            (lit-dec:i32))
                        (add:i32
                            (id:i32
                                (x))
                            (arr-index:i32
                                (id:[i32;2]
                                    (a))
                                (lit-dec:i32)))))
                (stmt-exp:ERROR!
                    (assign-add:ERROR!
                        (arr-index:i32
                            (id:[i32;2]
                                (a))
                            (lit-dec:i32))
                        (arr-index:i32
                            (id:[i32;2]
                                (a))
                            (lit-dec:i32))))
                (stmt-exp:ERROR!
                    (assign:ERROR!
                        (id:[i32;2]
                            (a))
                        (arr:[i32;2]
                            (exprs
                                (lit-dec:i32)
                                (lit-dec:i32)))))
                (let:()
                    (pat-id
                        (id
                            (b)))
                    (id
                        (Cat))
                    (struct:Cat
                        (id
                            (Cat))
                        (field-inits
                            (field-init
                                (id
                                    (x))
                                (lit-dec:i32))
                            (field-init
                                (id
                                    (y))
                                (arr:[i32;2]
                                    (exprs
                                        (lit-dec:i32)
                                        (lit-dec:i32)))))))
                (stmt-exp:ERROR!
                    (assign:ERROR!
                        (field-lookup:i32
                            (id:Cat
                                (b))
                            (id
                                (x)))
                        (id:i32
                            (x))))
                (stmt-exp:ERROR!
                    (assign:ERROR!
                        (field-lookup:[i32;2]
                            (id:Cat
                                (b))
                            (id
                                (y)))
                        (id:[i32;2]
                            (a))))
                (stmt-exp:ERROR!
                    (assign:ERROR!
                        (arr-index:i32
                            (field-lookup:[i32;2]
                                (id:Cat
                                    (b))
                                (id
                                    (y)))
                            (lit-dec:i32))
                        (id:i32
                            (x))))
                (stmt-exp:ERROR!
                    (assign:ERROR!
                        (id:Cat
                            (b))
                        (struct:Cat
                            (id
                                (Cat))
                            (field-inits
                                (field-init
                                    (id
                                        (x))
                                    (lit-dec:i32))
                                (field-init
                                    (id
                                        (y))
                                    (arr:[i32;2]
                                        (exprs
                                            (lit-dec:i32)
                                            (lit-dec:i32))))))))
                (unit:())))))
