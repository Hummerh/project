
(crate:ERROR!
    (items
        (struct-def:ok!
            (id
                (Some))
            (field-defs
                (field-def
                    (id
                        (a))
                    (type-arr
                        (type-i32)
                        (lit-dec)))
                (field-def
                    (id
                        (b))
                    (type-bool))))
        (fn-def:ok!
            (id
                (foo))
            (fn-params
                (fn-param
                    (pat-id
                        (id
                            (x)))
                    (type-i32))
                (fn-param
                    (pat-id
                        (id
                            (y)))
                    (type-i32))
                (fn-param
                    (pat-id
                        (id
                            (z)))
                    (type-i32)))
            (type-i32)
            (block:()
                (let:()
                    (pat-id
                        (id
                            (x)))
                    (lit-dec:i32))
                (return:()
                    (add:i32
                        (add:i32
                            (id:i32
                                (x))
                            (id:i32
                                (y)))
                        (id:i32
                            (z))))
                (unit:())))
        (fn-def:ok!
            (id
                (bar))
            (fn-params
                (fn-param
                    (pat-id
                        (id
                            (x)))
                    (type-arr
                        (type-i32)
                        (lit-dec)))
                (fn-param
                    (pat-id
                        (id
                            (y)))
                    (id
                        (Some))))
            (type-i32)
            (block:()
                (return:()
                    (add:i32
                        (arr-index:i32
                            (id:[i32;3]
                                (x))
                            (lit-dec:i32))
                        (arr-index:i32
                            (field-lookup:[i32;3]
                                (id:Some
                                    (y))
                                (id
                                    (a)))
                            (lit-dec:i32))))
                (unit:())))
        (fn-def:ok!
            (id
                (baz))
            (type-arr
                (type-i32)
                (lit-dec))
            (block:[i32;3]
                (arr:[i32;3]
                    (exprs
                        (lit-dec:i32)
                        (lit-dec:i32)
                        (lit-dec:i32)))))
        (fn-def:ok!
            (id
                (cats))
            (id
                (Some))
            (block:Some
                (struct:Some
                    (id
                        (Some))
                    (field-inits
                        (field-init
                            (id
                                (a))
                            (arr:[i32;3]
                                (exprs
                                    (lit-dec:i32)
                                    (lit-dec:i32)
                                    (lit-dec:i32))))
                        (field-init
                            (id
                                (b))
                            (false:bool))))))
        (fn-def:ERROR!
            (id
                (main))
            (type-unit)
            (block:ERROR!
                (stmt-exp:()
                    (eq:bool
                        (fn-call:i32
                            (id
                                (foo))
                            (exprs
                                (lit-dec:i32)
                                (lit-dec:i32)
                                (lit-dec:i32)))
                        (lit-dec:i32)))
                (stmt-exp:ERROR!
                    (eq:ERROR!
                        (fn-call:ERROR!
                            (id
                                (foo))
                            (exprs
                                (lit-dec:i32)
                                (lit-dec:i32)))
                        (lit-dec:i32)))
                (stmt-exp:ERROR!
                    (eq:ERROR!
                        (fn-call:ERROR!
                            (id
                                (foo)))
                        (lit-dec:i32)))
                (stmt-exp:()
                    (fn-call:i32
                        (id
                            (bar))
                        (exprs
                            (arr:[i32;3]
                                (exprs
                                    (lit-dec:i32)
                                    (lit-dec:i32)
                                    (lit-dec:i32)))
                            (struct:Some
                                (id
                                    (Some))
                                (field-inits
                                    (field-init
                                        (id
                                            (a))
                                        (arr:[i32;3]
                                            (exprs
                                                (lit-dec:i32)
                                                (lit-dec:i32)
                                                (lit-dec:i32))))
                                    (field-init
                                        (id
                                            (b))
                                        (false:bool)))))))
                (stmt-exp:ERROR!
                    (fn-call:ERROR!
                        (id
                            (bar))
                        (exprs
                            (arr:[i32;2]
                                (exprs
                                    (lit-dec:i32)
                                    (lit-dec:i32)))
                            (struct:Some
                                (id
                                    (Some))
                                (field-inits
                                    (field-init
                                        (id
                                            (a))
                                        (arr:[i32;3]
                                            (exprs
                                                (lit-dec:i32)
                                                (lit-dec:i32)
                                                (lit-dec:i32))))
                                    (field-init
                                        (id
                                            (b))
                                        (false:bool)))))))
                (stmt-exp:ERROR!
                    (fn-call:ERROR!
                        (id
                            (bar))
                        (exprs
                            (arr:[i32;2]
                                (exprs
                                    (lit-dec:i32)
                                    (lit-dec:i32))))))
                (stmt-exp:()
                    (arr-index:i32
                        (fn-call:[i32;3]
                            (id
                                (baz)))
                        (lit-dec:i32)))
                (stmt-exp:ERROR!
                    (fn-call:ERROR!
                        (id
                            (baz))
                        (exprs
                            (lit-dec:i32))))
                (stmt-exp:()
                    (eq:bool
                        (arr-index:i32
                            (field-lookup:[i32;3]
                                (fn-call:Some
                                    (id
                                        (cats)))
                                (id
                                    (a)))
                            (lit-dec:i32))
                        (lit-dec:i32)))
                (unit:())))))
