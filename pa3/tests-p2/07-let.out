
(crate:ERROR!
    (items
        (fn-def:ERROR!
            (id
                (main))
            (type-unit)
            (block:ERROR!
                (let:()
                    (pat-id
                        (id
                            (x)))
                    (type-i32)
                    (lit-dec:i32))
                (let:()
                    (pat-id
                        (id
                            (y)))
                    (add:i32
                        (id:i32
                            (x))
                        (lit-dec:i32)))
                (let:()
                    (pat-id
                        (id
                            (a)))
                    (true:bool))
                (let:ERROR!
                    (pat-id
                        (id
                            (b)))
                    (type-i32)
                    (true:bool))
                (stmt-exp:()
                    (sub:i32
                        (id:i32
                            (x))
                        (id:i32
                            (y))))
                (stmt-exp:()
                    (sub:i32
                        (id:i32
                            (x))
                        (lit-dec:i32)))
                (stmt-exp:()
                    (mul:i32
                        (mul:i32
                            (lit-dec:i32)
                            (id:i32
                                (y)))
                        (lit-dec:i32)))
                (stmt-exp:ERROR!
                    (add:ERROR!
                        (id:bool
                            (a))
                        (id:i32
                            (x))))
                (stmt-exp:ERROR!
                    (div:ERROR!
                        (id:bool
                            (a))
                        (lit-dec:i32)))
                (unit:())))))
