
(crate:ERROR!
    (items
        (fn-def:ERROR!
            (id
                (foo))
            (fn-params
                (fn-param
                    (pat-id
                        (id
                            (x)))
                    (type-bool)))
            (type-unit)
            (block:ERROR!
                (stmt-exp:ERROR!
                    (add:ERROR!
                        (id:bool
                            (x))
                        (id:bool
                            (x))))
                (stmt-exp:()
                    (or:bool
                        (id:bool
                            (x))
                        (id:bool
                            (x))))
                (stmt-exp:ERROR!
                    (arr-index:ERROR!
                        (id:bool
                            (x))
                        (lit-dec:i32)))
                (let:()
                    (pat-id
                        (id
                            (x)))
                    (type-i32)
                    (lit-dec:i32))
                (stmt-exp:()
                    (add:i32
                        (id:i32
                            (x))
                        (id:i32
                            (x))))
                (stmt-exp:ERROR!
                    (or:ERROR!
                        (id:i32
                            (x))
                        (id:i32
                            (x))))
                (stmt-exp:ERROR!
                    (arr-index:ERROR!
                        (id:i32
                            (x))
                        (lit-dec:i32)))
                (stmt-exp:ERROR!
                    (loop:ERROR!
                        (block:ERROR!
                            (let:()
                                (pat-id
                                    (id
                                        (x)))
                                (type-bool)
                                (true:bool))
                            (stmt-exp:ERROR!
                                (add:ERROR!
                                    (id:bool
                                        (x))
                                    (id:bool
                                        (x))))
                            (stmt-exp:()
                                (or:bool
                                    (id:bool
                                        (x))
                                    (id:bool
                                        (x))))
                            (stmt-exp:ERROR!
                                (arr-index:ERROR!
                                    (id:bool
                                        (x))
                                    (lit-dec:i32)))
                            (stmt-exp:ERROR!
                                (if:ERROR!
                                    (false:bool)
                                    (block:ERROR!
                                        (let:()
                                            (pat-id
                                                (id
                                                    (x)))
                                            (type-arr
                                                (type-i32)
                                                (lit-dec))
                                            (arr:[i32;1]
                                                (exprs
                                                    (lit-dec:i32))))
                                        (stmt-exp:ERROR!
                                            (add:ERROR!
                                                (id:[i32;1]
                                                    (x))
                                                (id:[i32;1]
                                                    (x))))
                                        (stmt-exp:ERROR!
                                            (or:ERROR!
                                                (id:[i32;1]
                                                    (x))
                                                (id:[i32;1]
                                                    (x))))
                                        (stmt-exp:()
                                            (arr-index:i32
                                                (id:[i32;1]
                                                    (x))
                                                (lit-dec:i32)))
                                        (unit:()))))
                            (stmt-exp:ERROR!
                                (add:ERROR!
                                    (id:bool
                                        (x))
                                    (id:bool
                                        (x))))
                            (stmt-exp:()
                                (or:bool
                                    (id:bool
                                        (x))
                                    (id:bool
                                        (x))))
                            (stmt-exp:ERROR!
                                (arr-index:ERROR!
                                    (id:bool
                                        (x))
                                    (lit-dec:i32)))
                            (unit:()))))
                (stmt-exp:()
                    (add:i32
                        (id:i32
                            (x))
                        (id:i32
                            (x))))
                (stmt-exp:ERROR!
                    (or:ERROR!
                        (id:i32
                            (x))
                        (id:i32
                            (x))))
                (stmt-exp:ERROR!
                    (arr-index:ERROR!
                        (id:i32
                            (x))
                        (lit-dec:i32)))
                (unit:())))
        (fn-def:ok!
            (id
                (main))
            (type-unit)
            (block:()
                (unit:())))))
