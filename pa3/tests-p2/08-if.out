
(crate:ERROR!
    (items
        (fn-def:ERROR!
            (id
                (main))
            (type-unit)
            (block:ERROR!
                (let:()
                    (pat-id
                        (id
                            (x)))
                    (lt:bool
                        (lit-dec:i32)
                        (lit-dec:i32)))
                (let:()
                    (pat-id
                        (id
                            (y)))
                    (if:i32
                        (or:bool
                            (id:bool
                                (x))
                            (false:bool))
                        (block:i32
                            (lit-dec:i32))
                        (block:i32
                            (lit-dec:i32))))
                (let:ERROR!
                    (pat-id
                        (id
                            (z)))
                    (type-unit)
                    (if:i32
                        (or:bool
                            (id:bool
                                (x))
                            (false:bool))
                        (block:i32
                            (lit-dec:i32))
                        (block:i32
                            (lit-dec:i32))))
                (let:()
                    (pat-id
                        (id
                            (w)))
                    (type-unit)
                    (if:()
                        (or:bool
                            (id:bool
                                (x))
                            (false:bool))
                        (block:()
                            (stmt-exp:()
                                (lit-dec:i32))
                            (unit:()))))
                (stmt-exp:ERROR!
                    (if:ERROR!
                        (true:bool)
                        (block:i32
                            (add:i32
                                (lit-dec:i32)
                                (lit-dec:i32)))
                        (block:bool
                            (leq:bool
                                (lit-dec:i32)
                                (lit-dec:i32)))))
                (stmt-exp:ERROR!
                    (if:ERROR!
                        (or:bool
                            (lt:bool
                                (id:i32
                                    (y))
                                (lit-dec:i32))
                            (id:bool
                                (x)))
                        (block:bool
                            (true:bool))
                        (block:i32
                            (lit-dec:i32))))
                (if:()
                    (id:bool
                        (x))
                    (block:()
                        (unit:())))))))
