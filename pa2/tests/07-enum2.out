(crate
    (items
        (enum-def
            (id
                (Colors))
            (enum-ctor-defs
                (enum-ctor-def
                    (id
                        (Red)))
                (enum-ctor-def
                    (id
                        (Blue)))
                (enum-ctor-def
                    (id
                        (Green)))))
        (enum-def
            (id
                (Numbers))
            (enum-ctor-defs
                (enum-ctor-def
                    (id
                        (One)))
                (enum-ctor-def
                    (id
                        (Two)))
                (enum-ctor-def
                    (id
                        (Three)))))
        (enum-def
            (id
                (ABCs))
            (enum-ctor-defs
                (enum-ctor-def
                    (id
                        (A)))
                (enum-ctor-def
                    (id
                        (B)))
                (enum-ctor-def
                    (id
                        (C)))))
        (fn-def
            (id
                (foo))
            (id
                (Colors))
            (block
                (enum
                    (enum-ctor
                        (id
                            (Colors))
                        (id
                            (Red))))))
        (fn-def
            (id
                (bar))
            (fn-params
                (fn-param
                    (pat-id
                        (id
                            (c)))
                    (id
                        (Colors))))
            (id
                (Numbers))
            (block
                (enum
                    (enum-ctor
                        (id
                            (Numbers))
                        (id
                            (One))))))
        (fn-def
            (id
                (main))
            (block
                (let
                    (pat-id
                        (id
                            (x)))
                    (id
                        (Colors))
                    (enum
                        (enum-ctor
                            (id
                                (Colors))
                            (id
                                (Green)))))
                (let
                    (pat-id
                        (id
                            (y)))
                    (id
                        (Numbers))
                    (enum
                        (enum-ctor
                            (id
                                (Numbers))
                            (id
                                (Two)))))
                (let
                    (pat-id
                        (id
                            (z)))
                    (id
                        (ABCs))
                    (enum
                        (enum-ctor
                            (id
                                (ABCs))
                            (id
                                (A)))))))))