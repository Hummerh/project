(crate
    (items
        (fn-def
            (id
                (main))
            (block
                (let
                    (pat-mut-id
                        (id
                            (x)))
                    (type-i32)
                    (lit-dec))
                (let
                    (pat-mut-id
                        (id
                            (b)))
                    (type-bool)
                    (true))
                (let
                    (pat-id
                        (id
                            (y)))
                    (type-ref
                        (type-i32))
                    (addr-of
                        (lit-dec)))
                (let
                    (pat-id
                        (id
                            (c)))
                    (type-ref
                        (type-bool))
                    (addr-of
                        (false)))
                (let
                    (pat-id
                        (id
                            (z)))
                    (type-ref
                        (type-ref
                            (type-i32)))
                    (addr-of
                        (id
                            (y))))
                (let
                    (pat-id
                        (id
                            (d)))
                    (type-ref
                        (type-ref
                            (type-bool)))
                    (addr-of
                        (id
                            (c))))
                (assign
                    (id
                        (x))
                    (add
                        (deref
                            (deref
                                (id
                                    (z))))
                        (deref
                            (deref
                                (id
                                    (z))))))
                (assign
                    (id
                        (b))
                    (or
                        (deref
                            (deref
                                (id
                                    (d))))
                        (gt
                            (deref
                                (deref
                                    (id
                                        (z))))
                            (lit-dec))))
                (let
                    (pat-id
                        (id
                            (p)))
                    (type-box
                        (type-ref-mut
                            (type-i32)))
                    (box-new
                        (exprs
                            (addr-of-mut
                                (id
                                    (x))))))
                (let
                    (pat-id
                        (id
                            (q)))
                    (type-i32)
                    (deref
                        (deref
                            (id
                                (p)))))))))