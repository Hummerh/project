Nonterminals useless in grammar

   exps_seq
   arith


Terminals unused in grammar

   ABSTRACT
   ALIGNOF
   AS
   BE
   BREAK
   CONST
   CONTINUE
   CRATE
   DO
   EXTERN
   FALSE
   FINAL
   FOR
   IMPL
   IN
   MACRO
   MACRO_RULES
   MOD
   MOVE
   OFFSETOF
   OVERRIDE
   PRIV
   PUB
   PURE
   SIZEOF
   STATIC
   SELF
   SUPER
   TRUE
   TRAIT
   TYPE
   TYPEOF
   UNSAFE
   UNSIZED
   USE
   VIRTUAL
   WHERE
   YIELD
   USIZE
   ISIZE
   POUND
   POUNDEXCLAMATION
   APOSTRAPHE
   DOLLAR
   EXCLUSIVEOR
   LEFTSHIFT
   RIGHTSHIFT
   WILDCARD
   THREEDOTS
   EXCLUSIVEOREQUAL
   LEFTSHIFTEQUAL
   RIGHTSHIFTEQUAL
   UNKNOWN


Rules useless in grammar

  199 exps_seq: exps
  200         | %empty


State 6 conflicts: 1 reduce/reduce
State 63 conflicts: 1 shift/reduce
State 84 conflicts: 1 shift/reduce
State 94 conflicts: 2 reduce/reduce
State 101 conflicts: 1 shift/reduce, 1 reduce/reduce
State 109 conflicts: 1 shift/reduce
State 125 conflicts: 1 shift/reduce
State 126 conflicts: 2 shift/reduce
State 129 conflicts: 1 shift/reduce
State 134 conflicts: 2 shift/reduce
State 172 conflicts: 1 shift/reduce
State 174 conflicts: 16 shift/reduce, 2 reduce/reduce
State 176 conflicts: 1 shift/reduce
State 187 conflicts: 1 shift/reduce
State 190 conflicts: 1 shift/reduce
State 191 conflicts: 1 shift/reduce
State 196 conflicts: 1 shift/reduce
State 202 conflicts: 10 reduce/reduce
State 207 conflicts: 1 shift/reduce, 1 reduce/reduce
State 208 conflicts: 1 shift/reduce
State 209 conflicts: 16 shift/reduce
State 210 conflicts: 16 shift/reduce
State 211 conflicts: 16 shift/reduce
State 212 conflicts: 16 shift/reduce
State 213 conflicts: 16 shift/reduce
State 214 conflicts: 16 shift/reduce
State 215 conflicts: 16 shift/reduce
State 216 conflicts: 16 shift/reduce
State 218 conflicts: 1 shift/reduce
State 219 conflicts: 1 shift/reduce
State 220 conflicts: 1 shift/reduce
State 221 conflicts: 1 shift/reduce
State 222 conflicts: 1 shift/reduce
State 223 conflicts: 1 shift/reduce
State 224 conflicts: 1 shift/reduce
State 225 conflicts: 1 shift/reduce
State 226 conflicts: 1 shift/reduce
State 227 conflicts: 1 shift/reduce
State 228 conflicts: 1 shift/reduce
State 229 conflicts: 1 shift/reduce
State 230 conflicts: 1 shift/reduce
State 235 conflicts: 10 shift/reduce
State 236 conflicts: 1 shift/reduce
State 242 conflicts: 1 shift/reduce
State 246 conflicts: 1 shift/reduce
State 253 conflicts: 10 shift/reduce
State 254 conflicts: 10 shift/reduce
State 255 conflicts: 10 shift/reduce
State 256 conflicts: 10 shift/reduce
State 257 conflicts: 10 shift/reduce
State 258 conflicts: 10 shift/reduce
State 259 conflicts: 10 shift/reduce
State 260 conflicts: 10 shift/reduce
State 262 conflicts: 10 reduce/reduce
State 263 conflicts: 10 reduce/reduce
State 264 conflicts: 10 reduce/reduce
State 265 conflicts: 10 reduce/reduce
State 266 conflicts: 10 reduce/reduce
State 267 conflicts: 10 reduce/reduce
State 268 conflicts: 10 reduce/reduce
State 269 conflicts: 10 reduce/reduce
State 270 conflicts: 10 reduce/reduce
State 271 conflicts: 10 reduce/reduce
State 272 conflicts: 10 reduce/reduce
State 273 conflicts: 10 reduce/reduce
State 274 conflicts: 10 reduce/reduce
State 289 conflicts: 1 shift/reduce
State 300 conflicts: 2 shift/reduce
State 307 conflicts: 1 shift/reduce


Grammar

    0 $accept: crate $end

    1 crate: items

    2 items: item items
    3      | item
    4      | %empty

    5 item: function
    6     | struct
    7     | enum

    8 stmts: stmt SEMICOLON stmts
    9      | stmt
   10      | %empty

   11 stmt: return
   12     | exp
   13     | let
   14     | function

   15 exps: exp COMMA exps
   16     | exp

   17 exp: LPAREN exp RPAREN
   18    | arith1
   19    | loop
   20    | while
   21    | box_new
   22    | if
   23    | match
   24    | arg_struct
   25    | assign
   26    | arr
   27    | arr_index
   28    | unit
   29    | %empty

   30 arith1: add
   31       | sub
   32       | arith2

   33 arith2: mul
   34       | div
   35       | mod
   36       | neg
   37       | arith3

   38 arith3: LPAREN arith1 RPAREN
   39       | fn_call
   40       | comp
   41       | field_lookup
   42       | arith4

   43 arith4: id
   44       | ptr
   45       | lit

   46 add: arith1 ADD arith1

   47 sub: arith1 SUB arith1

   48 mul: arith1 MUL arith1

   49 div: arith1 DIV arith1

   50 mod: arith1 MODOP arith1

   51 neg: SUB arith4

   52 comp: lt
   53     | leq
   54     | gt
   55     | geq
   56     | eq
   57     | neq
   58     | or
   59     | and
   60     | not

   61 lt: arith1 LESSTHAN arith1

   62 leq: arith1 LESSTHANOREQUAL arith1

   63 gt: arith1 GREATERTHAN arith1

   64 geq: arith1 GREATERTHANOREQUAL arith1

   65 eq: arith1 EQUALTO arith1

   66 neq: arith1 NOTEQUAL arith1

   67 or: arith1 LOGICALOR arith1

   68 and: arith1 LOGICALAND arith1

   69 not: NOT arith1

   70 ptr: addr
   71    | deref
   72    | addr_of_mut

   73 addr: AND arith4
   74     | AND neg

   75 deref: MUL arith4
   76      | MUL neg

   77 addr_of_mut: AND MUT arith4
   78            | AND MUT neg

   79 unit: LPAREN RPAREN

   80 assign: exp EQU exp
   81       | exp PLUSEQUAL exp
   82       | exp SUBEQUAL exp
   83       | exp DIVEQUAL exp
   84       | exp TIMESEQUAL exp
   85       | exp MODEQUAL exp
   86       | exp ANDEQUAL exp
   87       | exp OREQUAL exp

   88 let: LET pat COLON type EQU exp
   89    | LET pat COLON type
   90    | LET pat EQU exp
   91    | LET pat

   92 field_lookup: exp PERIOD id

   93 while: WHILE LPAREN exp RPAREN block

   94 loop: LOOP block

   95 if: IF LPAREN exp RPAREN block
   96   | if ELSE block

   97 match: MATCH LPAREN exp RPAREN LSQUIGBRACKET match_arms RSQUIGBRACKET

   98 match_arms: match_arm COMMA match_arms
   99           | match_arm

  100 match_arm: match_pats PIPE block

  101 match_pats: pat OR match_pats
  102           | pat

  103 pats: pat COMMA pats
  104     | pat

  105 pat: p_lit
  106    | LPAREN RPAREN
  107    | WC
  108    | SUB p_lit
  109    | id
  110    | REF id
  111    | REF MUT id
  112    | MUT id
  113    | AND pat
  114    | pat_arr
  115    | pat_enum
  116    | pat_struct

  117 pat_arr: LBRACKET pats RBRACKET

  118 pat_struct: id LSQUIGBRACKET pat_fields RSQUIGBRACKET

  119 pat_fields: pat_field COMMA pat_fields
  120           | pat_field

  121 pat_field: id COLON pat

  122 arr: LBRACKET exps RBRACKET

  123 arr_index: exp LBRACKET exp RBRACKET

  124 function: FN id LPAREN fn_params_seq RPAREN block
  125         | FN id LPAREN fn_params_seq RPAREN OBJECTACCESS type block

  126 fn_call: id LPAREN fn_args RPAREN

  127 fn_args: fn_arg fn_args
  128        | %empty

  129 fn_arg: fn_arg COMMA
  130       | lit
  131       | id
  132       | box_new
  133       | fn_call
  134       | arg_struct

  135 lit: p_lit
  136    | enum_con

  137 p_lit: LITDEC
  138      | LITCHAR
  139      | LITBOOL
  140      | LITSTRING

  141 id: ID

  142 fn_params_seq: fn_params
  143              | %empty

  144 fn_params: fn_param COMMA fn_params
  145          | fn_param

  146 fn_param: pat COLON type
  147         | pat COLON id

  148 types: type COMMA types
  149      | type

  150 type: BOOL
  151     | UEIGHT
  152     | USIXTEEN
  153     | UTHREETWO
  154     | USIXFOUR
  155     | IEIGHT
  156     | ISIXTEEN
  157     | ITHREETWO
  158     | ISIXFOUR
  159     | FTHREETWO
  160     | FSIXFOUR
  161     | CHAR
  162     | STR
  163     | box
  164     | NOT
  165     | type_ref
  166     | id
  167     | AND MUT type
  168     | type_arr
  169     | LPAREN RPAREN
  170     | %empty

  171 type_arr: LBRACKET type RBRACKET
  172         | LBRACKET type SEMICOLON p_lit RBRACKET

  173 type_ref: AND type

  174 box: BOX LESSTHAN type GREATERTHAN

  175 box_new: BOX CLASSACCESS NEW LPAREN exp RPAREN

  176 struct: STRUCT id LSQUIGBRACKET field_defs RSQUIGBRACKET

  177 field_defs: field_def field_defs
  178           | field_def

  179 field_def: field_def COMMA
  180          | id COLON type

  181 block: LSQUIGBRACKET stmts RSQUIGBRACKET

  182 return: RETURN
  183       | return exp

  184 arg_struct: id LSQUIGBRACKET body RSQUIGBRACKET

  185 body: param_arg body
  186     | param_arg

  187 param_arg: param_arg COMMA
  188          | id COLON exp

  189 enum_con: enum_con LPAREN exps RPAREN
  190         | id CLASSACCESS id

  191 pat_enum: pat_enum LPAREN pats RPAREN
  192         | id CLASSACCESS id

  193 enum: ENUM id LSQUIGBRACKET enum_params RSQUIGBRACKET

  194 enum_params: enum_param enum_params
  195            | %empty

  196 enum_param: enum_param COMMA
  197           | enum_param LPAREN types RPAREN
  198           | id


Terminals, with rules where they appear

$end (0) 0
error (256)
LITCHAR (258) 138
LITSTRING (259) 140
LITDEC (260) 137
LITBOOL (261) 139
ID (262) 141
NEW (263) 175
ABSTRACT (264)
ALIGNOF (265)
AS (266)
BE (267)
BOX (268) 174 175
BREAK (269)
CONST (270)
CONTINUE (271)
CRATE (272)
DO (273)
ELSE (274) 96
ENUM (275) 193
EXTERN (276)
FALSE (277)
FINAL (278)
FN (279) 124 125
FOR (280)
IF (281) 95
IMPL (282)
IN (283)
LET (284) 88 89 90 91
LOOP (285) 94
MACRO (286)
MACRO_RULES (287)
MATCH (288) 97
MOD (289)
MOVE (290)
MUT (291) 77 78 111 112 167
OFFSETOF (292)
OVERRIDE (293)
PRIV (294)
PUB (295)
PURE (296)
REF (297) 110 111
RETURN (298) 182
SIZEOF (299)
STATIC (300)
SELF (301)
STRUCT (302) 176
SUPER (303)
TRUE (304)
TRAIT (305)
TYPE (306)
TYPEOF (307)
UNSAFE (308)
UNSIZED (309)
USE (310)
VIRTUAL (311)
WHERE (312)
WHILE (313) 93
YIELD (314)
BOOL (315) 150
UEIGHT (316) 151
USIXTEEN (317) 152
UTHREETWO (318) 153
USIXFOUR (319) 154
IEIGHT (320) 155
ISIXTEEN (321) 156
ITHREETWO (322) 157
ISIXFOUR (323) 158
FTHREETWO (324) 159
FSIXFOUR (325) 160
USIZE (326)
ISIZE (327)
CHAR (328) 161
STR (329) 162
CLASSACCESS (330) 175 190 192
OBJECTACCESS (331) 125
PIPE (332) 100
POUND (333)
POUNDEXCLAMATION (334)
APOSTRAPHE (335)
DOLLAR (336)
LBRACKET (337) 117 122 123 171 172
RBRACKET (338) 117 122 123 171 172
LPAREN (339) 17 38 79 93 95 97 106 124 125 126 169 175 189 191 197
RPAREN (340) 17 38 79 93 95 97 106 124 125 126 169 175 189 191 197
LSQUIGBRACKET (341) 97 118 176 181 184 193
RSQUIGBRACKET (342) 97 118 176 181 184 193
COMMA (343) 15 98 103 119 129 144 148 179 187 196
SEMICOLON (344) 8 172
COLON (345) 88 89 121 146 147 180 188
SUB (346) 47 51 108
MUL (347) 48 75 76
NOT (348) 69 164
ADD (349) 46
DIV (350) 49
MODOP (351) 50
AND (352) 73 74 77 78 113 167 173
OR (353) 101
EXCLUSIVEOR (354)
LEFTSHIFT (355)
RIGHTSHIFT (356)
WILDCARD (357)
THREEDOTS (358)
LOGICALOR (359) 67
LOGICALAND (360) 68
EQUALTO (361) 65
NOTEQUAL (362) 66
LESSTHAN (363) 61 174
GREATERTHAN (364) 63 174
LESSTHANOREQUAL (365) 62
GREATERTHANOREQUAL (366) 64
PLUSEQUAL (367) 81
SUBEQUAL (368) 82
TIMESEQUAL (369) 84
DIVEQUAL (370) 83
MODEQUAL (371) 85
ANDEQUAL (372) 86
OREQUAL (373) 87
EXCLUSIVEOREQUAL (374)
LEFTSHIFTEQUAL (375)
RIGHTSHIFTEQUAL (376)
UNKNOWN (377)
EQU (378) 80 88 90
PERIOD (379) 92
WC (380) 107


Nonterminals, with rules where they appear

$accept (126)
    on left: 0
crate (127)
    on left: 1, on right: 0
items (128)
    on left: 2 3 4, on right: 1 2
item (129)
    on left: 5 6 7, on right: 2 3
stmts (130)
    on left: 8 9 10, on right: 8 181
stmt (131)
    on left: 11 12 13 14, on right: 8 9
exps (132)
    on left: 15 16, on right: 15 122 189
exp (133)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29, on right: 12 15
    16 17 80 81 82 83 84 85 86 87 88 90 92 93 95 97 123 175 183 188
arith1 (134)
    on left: 30 31 32, on right: 18 38 46 47 48 49 50 61 62 63 64 65
    66 67 68 69
arith2 (135)
    on left: 33 34 35 36 37, on right: 32
arith3 (136)
    on left: 38 39 40 41 42, on right: 37
arith4 (137)
    on left: 43 44 45, on right: 42 51 73 75 77
add (138)
    on left: 46, on right: 30
sub (139)
    on left: 47, on right: 31
mul (140)
    on left: 48, on right: 33
div (141)
    on left: 49, on right: 34
mod (142)
    on left: 50, on right: 35
neg (143)
    on left: 51, on right: 36 74 76 78
comp (144)
    on left: 52 53 54 55 56 57 58 59 60, on right: 40
lt (145)
    on left: 61, on right: 52
leq (146)
    on left: 62, on right: 53
gt (147)
    on left: 63, on right: 54
geq (148)
    on left: 64, on right: 55
eq (149)
    on left: 65, on right: 56
neq (150)
    on left: 66, on right: 57
or (151)
    on left: 67, on right: 58
and (152)
    on left: 68, on right: 59
not (153)
    on left: 69, on right: 60
ptr (154)
    on left: 70 71 72, on right: 44
addr (155)
    on left: 73 74, on right: 70
deref (156)
    on left: 75 76, on right: 71
addr_of_mut (157)
    on left: 77 78, on right: 72
unit (158)
    on left: 79, on right: 28
assign (159)
    on left: 80 81 82 83 84 85 86 87, on right: 25
let (160)
    on left: 88 89 90 91, on right: 13
field_lookup (161)
    on left: 92, on right: 41
while (162)
    on left: 93, on right: 20
loop (163)
    on left: 94, on right: 19
if (164)
    on left: 95 96, on right: 22 96
match (165)
    on left: 97, on right: 23
match_arms (166)
    on left: 98 99, on right: 97 98
match_arm (167)
    on left: 100, on right: 98 99
match_pats (168)
    on left: 101 102, on right: 100 101
pats (169)
    on left: 103 104, on right: 103 117 191
pat (170)
    on left: 105 106 107 108 109 110 111 112 113 114 115 116, on right:
    88 89 90 91 101 102 103 104 113 121 146 147
pat_arr (171)
    on left: 117, on right: 114
pat_struct (172)
    on left: 118, on right: 116
pat_fields (173)
    on left: 119 120, on right: 118 119
pat_field (174)
    on left: 121, on right: 119 120
arr (175)
    on left: 122, on right: 26
arr_index (176)
    on left: 123, on right: 27
function (177)
    on left: 124 125, on right: 5 14
fn_call (178)
    on left: 126, on right: 39 133
fn_args (179)
    on left: 127 128, on right: 126 127
fn_arg (180)
    on left: 129 130 131 132 133 134, on right: 127 129
lit (181)
    on left: 135 136, on right: 45 130
p_lit (182)
    on left: 137 138 139 140, on right: 105 108 135 172
id (183)
    on left: 141, on right: 43 92 109 110 111 112 118 121 124 125 126
    131 147 166 176 180 184 188 190 192 193 198
fn_params_seq (184)
    on left: 142 143, on right: 124 125
fn_params (185)
    on left: 144 145, on right: 142 144
fn_param (186)
    on left: 146 147, on right: 144 145
types (187)
    on left: 148 149, on right: 148 197
type (188)
    on left: 150 151 152 153 154 155 156 157 158 159 160 161 162 163
    164 165 166 167 168 169 170, on right: 88 89 125 146 148 149 167
    171 172 173 174 180
type_arr (189)
    on left: 171 172, on right: 168
type_ref (190)
    on left: 173, on right: 165
box (191)
    on left: 174, on right: 163
box_new (192)
    on left: 175, on right: 21 132
struct (193)
    on left: 176, on right: 6
field_defs (194)
    on left: 177 178, on right: 176 177
field_def (195)
    on left: 179 180, on right: 177 178 179
block (196)
    on left: 181, on right: 93 94 95 96 100 124 125
return (197)
    on left: 182 183, on right: 11 183
arg_struct (198)
    on left: 184, on right: 24 134
body (199)
    on left: 185 186, on right: 184 185
param_arg (200)
    on left: 187 188, on right: 185 186 187
enum_con (201)
    on left: 189 190, on right: 136 189
pat_enum (202)
    on left: 191 192, on right: 115 191
enum (203)
    on left: 193, on right: 7
enum_params (204)
    on left: 194 195, on right: 193 194
enum_param (205)
    on left: 196 197 198, on right: 194 196 197


State 0

    0 $accept: . crate $end

    ENUM    shift, and go to state 1
    FN      shift, and go to state 2
    STRUCT  shift, and go to state 3

    $default  reduce using rule 4 (items)

    crate     go to state 4
    items     go to state 5
    item      go to state 6
    function  go to state 7
    struct    go to state 8
    enum      go to state 9


State 1

  193 enum: ENUM . id LSQUIGBRACKET enum_params RSQUIGBRACKET

    ID  shift, and go to state 10

    id  go to state 11


State 2

  124 function: FN . id LPAREN fn_params_seq RPAREN block
  125         | FN . id LPAREN fn_params_seq RPAREN OBJECTACCESS type block

    ID  shift, and go to state 10

    id  go to state 12


State 3

  176 struct: STRUCT . id LSQUIGBRACKET field_defs RSQUIGBRACKET

    ID  shift, and go to state 10

    id  go to state 13


State 4

    0 $accept: crate . $end

    $end  shift, and go to state 14


State 5

    1 crate: items .

    $default  reduce using rule 1 (crate)


State 6

    2 items: item . items
    3      | item .

    ENUM    shift, and go to state 1
    FN      shift, and go to state 2
    STRUCT  shift, and go to state 3

    $end      reduce using rule 3 (items)
    $end      [reduce using rule 4 (items)]
    $default  reduce using rule 3 (items)

    items     go to state 15
    item      go to state 6
    function  go to state 7
    struct    go to state 8
    enum      go to state 9


State 7

    5 item: function .

    $default  reduce using rule 5 (item)


State 8

    6 item: struct .

    $default  reduce using rule 6 (item)


State 9

    7 item: enum .

    $default  reduce using rule 7 (item)


State 10

  141 id: ID .

    $default  reduce using rule 141 (id)


State 11

  193 enum: ENUM id . LSQUIGBRACKET enum_params RSQUIGBRACKET

    LSQUIGBRACKET  shift, and go to state 16


State 12

  124 function: FN id . LPAREN fn_params_seq RPAREN block
  125         | FN id . LPAREN fn_params_seq RPAREN OBJECTACCESS type block

    LPAREN  shift, and go to state 17


State 13

  176 struct: STRUCT id . LSQUIGBRACKET field_defs RSQUIGBRACKET

    LSQUIGBRACKET  shift, and go to state 18


State 14

    0 $accept: crate $end .

    $default  accept


State 15

    2 items: item items .

    $default  reduce using rule 2 (items)


State 16

  193 enum: ENUM id LSQUIGBRACKET . enum_params RSQUIGBRACKET

    ID  shift, and go to state 10

    $default  reduce using rule 195 (enum_params)

    id           go to state 19
    enum_params  go to state 20
    enum_param   go to state 21


State 17

  124 function: FN id LPAREN . fn_params_seq RPAREN block
  125         | FN id LPAREN . fn_params_seq RPAREN OBJECTACCESS type block

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    MUT        shift, and go to state 26
    REF        shift, and go to state 27
    LBRACKET   shift, and go to state 28
    LPAREN     shift, and go to state 29
    SUB        shift, and go to state 30
    AND        shift, and go to state 31
    WC         shift, and go to state 32

    $default  reduce using rule 143 (fn_params_seq)

    pat            go to state 33
    pat_arr        go to state 34
    pat_struct     go to state 35
    p_lit          go to state 36
    id             go to state 37
    fn_params_seq  go to state 38
    fn_params      go to state 39
    fn_param       go to state 40
    pat_enum       go to state 41


State 18

  176 struct: STRUCT id LSQUIGBRACKET . field_defs RSQUIGBRACKET

    ID  shift, and go to state 10

    id          go to state 42
    field_defs  go to state 43
    field_def   go to state 44


State 19

  198 enum_param: id .

    $default  reduce using rule 198 (enum_param)


State 20

  193 enum: ENUM id LSQUIGBRACKET enum_params . RSQUIGBRACKET

    RSQUIGBRACKET  shift, and go to state 45


State 21

  194 enum_params: enum_param . enum_params
  196 enum_param: enum_param . COMMA
  197           | enum_param . LPAREN types RPAREN

    ID      shift, and go to state 10
    LPAREN  shift, and go to state 46
    COMMA   shift, and go to state 47

    $default  reduce using rule 195 (enum_params)

    id           go to state 19
    enum_params  go to state 48
    enum_param   go to state 21


State 22

  138 p_lit: LITCHAR .

    $default  reduce using rule 138 (p_lit)


State 23

  140 p_lit: LITSTRING .

    $default  reduce using rule 140 (p_lit)


State 24

  137 p_lit: LITDEC .

    $default  reduce using rule 137 (p_lit)


State 25

  139 p_lit: LITBOOL .

    $default  reduce using rule 139 (p_lit)


State 26

  112 pat: MUT . id

    ID  shift, and go to state 10

    id  go to state 49


State 27

  110 pat: REF . id
  111    | REF . MUT id

    ID   shift, and go to state 10
    MUT  shift, and go to state 50

    id  go to state 51


State 28

  117 pat_arr: LBRACKET . pats RBRACKET

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    MUT        shift, and go to state 26
    REF        shift, and go to state 27
    LBRACKET   shift, and go to state 28
    LPAREN     shift, and go to state 29
    SUB        shift, and go to state 30
    AND        shift, and go to state 31
    WC         shift, and go to state 32

    pats        go to state 52
    pat         go to state 53
    pat_arr     go to state 34
    pat_struct  go to state 35
    p_lit       go to state 36
    id          go to state 37
    pat_enum    go to state 41


State 29

  106 pat: LPAREN . RPAREN

    RPAREN  shift, and go to state 54


State 30

  108 pat: SUB . p_lit

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25

    p_lit  go to state 55


State 31

  113 pat: AND . pat

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    MUT        shift, and go to state 26
    REF        shift, and go to state 27
    LBRACKET   shift, and go to state 28
    LPAREN     shift, and go to state 29
    SUB        shift, and go to state 30
    AND        shift, and go to state 31
    WC         shift, and go to state 32

    pat         go to state 56
    pat_arr     go to state 34
    pat_struct  go to state 35
    p_lit       go to state 36
    id          go to state 37
    pat_enum    go to state 41


State 32

  107 pat: WC .

    $default  reduce using rule 107 (pat)


State 33

  146 fn_param: pat . COLON type
  147         | pat . COLON id

    COLON  shift, and go to state 57


State 34

  114 pat: pat_arr .

    $default  reduce using rule 114 (pat)


State 35

  116 pat: pat_struct .

    $default  reduce using rule 116 (pat)


State 36

  105 pat: p_lit .

    $default  reduce using rule 105 (pat)


State 37

  109 pat: id .
  118 pat_struct: id . LSQUIGBRACKET pat_fields RSQUIGBRACKET
  192 pat_enum: id . CLASSACCESS id

    CLASSACCESS    shift, and go to state 58
    LSQUIGBRACKET  shift, and go to state 59

    $default  reduce using rule 109 (pat)


State 38

  124 function: FN id LPAREN fn_params_seq . RPAREN block
  125         | FN id LPAREN fn_params_seq . RPAREN OBJECTACCESS type block

    RPAREN  shift, and go to state 60


State 39

  142 fn_params_seq: fn_params .

    $default  reduce using rule 142 (fn_params_seq)


State 40

  144 fn_params: fn_param . COMMA fn_params
  145          | fn_param .

    COMMA  shift, and go to state 61

    $default  reduce using rule 145 (fn_params)


State 41

  115 pat: pat_enum .
  191 pat_enum: pat_enum . LPAREN pats RPAREN

    LPAREN  shift, and go to state 62

    $default  reduce using rule 115 (pat)


State 42

  180 field_def: id . COLON type

    COLON  shift, and go to state 63


State 43

  176 struct: STRUCT id LSQUIGBRACKET field_defs . RSQUIGBRACKET

    RSQUIGBRACKET  shift, and go to state 64


State 44

  177 field_defs: field_def . field_defs
  178           | field_def .
  179 field_def: field_def . COMMA

    ID     shift, and go to state 10
    COMMA  shift, and go to state 65

    $default  reduce using rule 178 (field_defs)

    id          go to state 42
    field_defs  go to state 66
    field_def   go to state 44


State 45

  193 enum: ENUM id LSQUIGBRACKET enum_params RSQUIGBRACKET .

    $default  reduce using rule 193 (enum)


State 46

  197 enum_param: enum_param LPAREN . types RPAREN

    ID         shift, and go to state 10
    BOX        shift, and go to state 67
    BOOL       shift, and go to state 68
    UEIGHT     shift, and go to state 69
    USIXTEEN   shift, and go to state 70
    UTHREETWO  shift, and go to state 71
    USIXFOUR   shift, and go to state 72
    IEIGHT     shift, and go to state 73
    ISIXTEEN   shift, and go to state 74
    ITHREETWO  shift, and go to state 75
    ISIXFOUR   shift, and go to state 76
    FTHREETWO  shift, and go to state 77
    FSIXFOUR   shift, and go to state 78
    CHAR       shift, and go to state 79
    STR        shift, and go to state 80
    LBRACKET   shift, and go to state 81
    LPAREN     shift, and go to state 82
    NOT        shift, and go to state 83
    AND        shift, and go to state 84

    $default  reduce using rule 170 (type)

    id        go to state 85
    types     go to state 86
    type      go to state 87
    type_arr  go to state 88
    type_ref  go to state 89
    box       go to state 90


State 47

  196 enum_param: enum_param COMMA .

    $default  reduce using rule 196 (enum_param)


State 48

  194 enum_params: enum_param enum_params .

    $default  reduce using rule 194 (enum_params)


State 49

  112 pat: MUT id .

    $default  reduce using rule 112 (pat)


State 50

  111 pat: REF MUT . id

    ID  shift, and go to state 10

    id  go to state 91


State 51

  110 pat: REF id .

    $default  reduce using rule 110 (pat)


State 52

  117 pat_arr: LBRACKET pats . RBRACKET

    RBRACKET  shift, and go to state 92


State 53

  103 pats: pat . COMMA pats
  104     | pat .

    COMMA  shift, and go to state 93

    $default  reduce using rule 104 (pats)


State 54

  106 pat: LPAREN RPAREN .

    $default  reduce using rule 106 (pat)


State 55

  108 pat: SUB p_lit .

    $default  reduce using rule 108 (pat)


State 56

  113 pat: AND pat .

    $default  reduce using rule 113 (pat)


State 57

  146 fn_param: pat COLON . type
  147         | pat COLON . id

    ID         shift, and go to state 10
    BOX        shift, and go to state 67
    BOOL       shift, and go to state 68
    UEIGHT     shift, and go to state 69
    USIXTEEN   shift, and go to state 70
    UTHREETWO  shift, and go to state 71
    USIXFOUR   shift, and go to state 72
    IEIGHT     shift, and go to state 73
    ISIXTEEN   shift, and go to state 74
    ITHREETWO  shift, and go to state 75
    ISIXFOUR   shift, and go to state 76
    FTHREETWO  shift, and go to state 77
    FSIXFOUR   shift, and go to state 78
    CHAR       shift, and go to state 79
    STR        shift, and go to state 80
    LBRACKET   shift, and go to state 81
    LPAREN     shift, and go to state 82
    NOT        shift, and go to state 83
    AND        shift, and go to state 84

    $default  reduce using rule 170 (type)

    id        go to state 94
    type      go to state 95
    type_arr  go to state 88
    type_ref  go to state 89
    box       go to state 90


State 58

  192 pat_enum: id CLASSACCESS . id

    ID  shift, and go to state 10

    id  go to state 96


State 59

  118 pat_struct: id LSQUIGBRACKET . pat_fields RSQUIGBRACKET

    ID  shift, and go to state 10

    pat_fields  go to state 97
    pat_field   go to state 98
    id          go to state 99


State 60

  124 function: FN id LPAREN fn_params_seq RPAREN . block
  125         | FN id LPAREN fn_params_seq RPAREN . OBJECTACCESS type block

    OBJECTACCESS   shift, and go to state 100
    LSQUIGBRACKET  shift, and go to state 101

    block  go to state 102


State 61

  144 fn_params: fn_param COMMA . fn_params

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    MUT        shift, and go to state 26
    REF        shift, and go to state 27
    LBRACKET   shift, and go to state 28
    LPAREN     shift, and go to state 29
    SUB        shift, and go to state 30
    AND        shift, and go to state 31
    WC         shift, and go to state 32

    pat         go to state 33
    pat_arr     go to state 34
    pat_struct  go to state 35
    p_lit       go to state 36
    id          go to state 37
    fn_params   go to state 103
    fn_param    go to state 40
    pat_enum    go to state 41


State 62

  191 pat_enum: pat_enum LPAREN . pats RPAREN

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    MUT        shift, and go to state 26
    REF        shift, and go to state 27
    LBRACKET   shift, and go to state 28
    LPAREN     shift, and go to state 29
    SUB        shift, and go to state 30
    AND        shift, and go to state 31
    WC         shift, and go to state 32

    pats        go to state 104
    pat         go to state 53
    pat_arr     go to state 34
    pat_struct  go to state 35
    p_lit       go to state 36
    id          go to state 37
    pat_enum    go to state 41


State 63

  180 field_def: id COLON . type

    ID         shift, and go to state 10
    BOX        shift, and go to state 67
    BOOL       shift, and go to state 68
    UEIGHT     shift, and go to state 69
    USIXTEEN   shift, and go to state 70
    UTHREETWO  shift, and go to state 71
    USIXFOUR   shift, and go to state 72
    IEIGHT     shift, and go to state 73
    ISIXTEEN   shift, and go to state 74
    ITHREETWO  shift, and go to state 75
    ISIXFOUR   shift, and go to state 76
    FTHREETWO  shift, and go to state 77
    FSIXFOUR   shift, and go to state 78
    CHAR       shift, and go to state 79
    STR        shift, and go to state 80
    LBRACKET   shift, and go to state 81
    LPAREN     shift, and go to state 82
    NOT        shift, and go to state 83
    AND        shift, and go to state 84

    ID        [reduce using rule 170 (type)]
    $default  reduce using rule 170 (type)

    id        go to state 85
    type      go to state 105
    type_arr  go to state 88
    type_ref  go to state 89
    box       go to state 90


State 64

  176 struct: STRUCT id LSQUIGBRACKET field_defs RSQUIGBRACKET .

    $default  reduce using rule 176 (struct)


State 65

  179 field_def: field_def COMMA .

    $default  reduce using rule 179 (field_def)


State 66

  177 field_defs: field_def field_defs .

    $default  reduce using rule 177 (field_defs)


State 67

  174 box: BOX . LESSTHAN type GREATERTHAN

    LESSTHAN  shift, and go to state 106


State 68

  150 type: BOOL .

    $default  reduce using rule 150 (type)


State 69

  151 type: UEIGHT .

    $default  reduce using rule 151 (type)


State 70

  152 type: USIXTEEN .

    $default  reduce using rule 152 (type)


State 71

  153 type: UTHREETWO .

    $default  reduce using rule 153 (type)


State 72

  154 type: USIXFOUR .

    $default  reduce using rule 154 (type)


State 73

  155 type: IEIGHT .

    $default  reduce using rule 155 (type)


State 74

  156 type: ISIXTEEN .

    $default  reduce using rule 156 (type)


State 75

  157 type: ITHREETWO .

    $default  reduce using rule 157 (type)


State 76

  158 type: ISIXFOUR .

    $default  reduce using rule 158 (type)


State 77

  159 type: FTHREETWO .

    $default  reduce using rule 159 (type)


State 78

  160 type: FSIXFOUR .

    $default  reduce using rule 160 (type)


State 79

  161 type: CHAR .

    $default  reduce using rule 161 (type)


State 80

  162 type: STR .

    $default  reduce using rule 162 (type)


State 81

  171 type_arr: LBRACKET . type RBRACKET
  172         | LBRACKET . type SEMICOLON p_lit RBRACKET

    ID         shift, and go to state 10
    BOX        shift, and go to state 67
    BOOL       shift, and go to state 68
    UEIGHT     shift, and go to state 69
    USIXTEEN   shift, and go to state 70
    UTHREETWO  shift, and go to state 71
    USIXFOUR   shift, and go to state 72
    IEIGHT     shift, and go to state 73
    ISIXTEEN   shift, and go to state 74
    ITHREETWO  shift, and go to state 75
    ISIXFOUR   shift, and go to state 76
    FTHREETWO  shift, and go to state 77
    FSIXFOUR   shift, and go to state 78
    CHAR       shift, and go to state 79
    STR        shift, and go to state 80
    LBRACKET   shift, and go to state 81
    LPAREN     shift, and go to state 82
    NOT        shift, and go to state 83
    AND        shift, and go to state 84

    $default  reduce using rule 170 (type)

    id        go to state 85
    type      go to state 107
    type_arr  go to state 88
    type_ref  go to state 89
    box       go to state 90


State 82

  169 type: LPAREN . RPAREN

    RPAREN  shift, and go to state 108


State 83

  164 type: NOT .

    $default  reduce using rule 164 (type)


State 84

  167 type: AND . MUT type
  173 type_ref: AND . type

    ID         shift, and go to state 10
    BOX        shift, and go to state 67
    MUT        shift, and go to state 109
    BOOL       shift, and go to state 68
    UEIGHT     shift, and go to state 69
    USIXTEEN   shift, and go to state 70
    UTHREETWO  shift, and go to state 71
    USIXFOUR   shift, and go to state 72
    IEIGHT     shift, and go to state 73
    ISIXTEEN   shift, and go to state 74
    ITHREETWO  shift, and go to state 75
    ISIXFOUR   shift, and go to state 76
    FTHREETWO  shift, and go to state 77
    FSIXFOUR   shift, and go to state 78
    CHAR       shift, and go to state 79
    STR        shift, and go to state 80
    LBRACKET   shift, and go to state 81
    LPAREN     shift, and go to state 82
    NOT        shift, and go to state 83
    AND        shift, and go to state 84

    ID        [reduce using rule 170 (type)]
    $default  reduce using rule 170 (type)

    id        go to state 85
    type      go to state 110
    type_arr  go to state 88
    type_ref  go to state 89
    box       go to state 90


State 85

  166 type: id .

    $default  reduce using rule 166 (type)


State 86

  197 enum_param: enum_param LPAREN types . RPAREN

    RPAREN  shift, and go to state 111


State 87

  148 types: type . COMMA types
  149      | type .

    COMMA  shift, and go to state 112

    $default  reduce using rule 149 (types)


State 88

  168 type: type_arr .

    $default  reduce using rule 168 (type)


State 89

  165 type: type_ref .

    $default  reduce using rule 165 (type)


State 90

  163 type: box .

    $default  reduce using rule 163 (type)


State 91

  111 pat: REF MUT id .

    $default  reduce using rule 111 (pat)


State 92

  117 pat_arr: LBRACKET pats RBRACKET .

    $default  reduce using rule 117 (pat_arr)


State 93

  103 pats: pat COMMA . pats

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    MUT        shift, and go to state 26
    REF        shift, and go to state 27
    LBRACKET   shift, and go to state 28
    LPAREN     shift, and go to state 29
    SUB        shift, and go to state 30
    AND        shift, and go to state 31
    WC         shift, and go to state 32

    pats        go to state 113
    pat         go to state 53
    pat_arr     go to state 34
    pat_struct  go to state 35
    p_lit       go to state 36
    id          go to state 37
    pat_enum    go to state 41


State 94

  147 fn_param: pat COLON id .
  166 type: id .

    RPAREN    reduce using rule 147 (fn_param)
    RPAREN    [reduce using rule 166 (type)]
    COMMA     reduce using rule 147 (fn_param)
    COMMA     [reduce using rule 166 (type)]
    $default  reduce using rule 147 (fn_param)


State 95

  146 fn_param: pat COLON type .

    $default  reduce using rule 146 (fn_param)


State 96

  192 pat_enum: id CLASSACCESS id .

    $default  reduce using rule 192 (pat_enum)


State 97

  118 pat_struct: id LSQUIGBRACKET pat_fields . RSQUIGBRACKET

    RSQUIGBRACKET  shift, and go to state 114


State 98

  119 pat_fields: pat_field . COMMA pat_fields
  120           | pat_field .

    COMMA  shift, and go to state 115

    $default  reduce using rule 120 (pat_fields)


State 99

  121 pat_field: id . COLON pat

    COLON  shift, and go to state 116


State 100

  125 function: FN id LPAREN fn_params_seq RPAREN OBJECTACCESS . type block

    ID         shift, and go to state 10
    BOX        shift, and go to state 67
    BOOL       shift, and go to state 68
    UEIGHT     shift, and go to state 69
    USIXTEEN   shift, and go to state 70
    UTHREETWO  shift, and go to state 71
    USIXFOUR   shift, and go to state 72
    IEIGHT     shift, and go to state 73
    ISIXTEEN   shift, and go to state 74
    ITHREETWO  shift, and go to state 75
    ISIXFOUR   shift, and go to state 76
    FTHREETWO  shift, and go to state 77
    FSIXFOUR   shift, and go to state 78
    CHAR       shift, and go to state 79
    STR        shift, and go to state 80
    LBRACKET   shift, and go to state 81
    LPAREN     shift, and go to state 82
    NOT        shift, and go to state 83
    AND        shift, and go to state 84

    $default  reduce using rule 170 (type)

    id        go to state 85
    type      go to state 117
    type_arr  go to state 88
    type_ref  go to state 89
    box       go to state 90


State 101

  181 block: LSQUIGBRACKET . stmts RSQUIGBRACKET

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    FN         shift, and go to state 2
    IF         shift, and go to state 119
    LET        shift, and go to state 120
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    RETURN     shift, and go to state 123
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET       [reduce using rule 29 (exp)]
    RSQUIGBRACKET  reduce using rule 10 (stmts)
    RSQUIGBRACKET  [reduce using rule 29 (exp)]
    $default       reduce using rule 29 (exp)

    stmts         go to state 131
    stmt          go to state 132
    exp           go to state 133
    arith1        go to state 134
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    let           go to state 160
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    function      go to state 168
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    return        go to state 174
    arg_struct    go to state 175
    enum_con      go to state 176


State 102

  124 function: FN id LPAREN fn_params_seq RPAREN block .

    $default  reduce using rule 124 (function)


State 103

  144 fn_params: fn_param COMMA fn_params .

    $default  reduce using rule 144 (fn_params)


State 104

  191 pat_enum: pat_enum LPAREN pats . RPAREN

    RPAREN  shift, and go to state 177


State 105

  180 field_def: id COLON type .

    $default  reduce using rule 180 (field_def)


State 106

  174 box: BOX LESSTHAN . type GREATERTHAN

    ID         shift, and go to state 10
    BOX        shift, and go to state 67
    BOOL       shift, and go to state 68
    UEIGHT     shift, and go to state 69
    USIXTEEN   shift, and go to state 70
    UTHREETWO  shift, and go to state 71
    USIXFOUR   shift, and go to state 72
    IEIGHT     shift, and go to state 73
    ISIXTEEN   shift, and go to state 74
    ITHREETWO  shift, and go to state 75
    ISIXFOUR   shift, and go to state 76
    FTHREETWO  shift, and go to state 77
    FSIXFOUR   shift, and go to state 78
    CHAR       shift, and go to state 79
    STR        shift, and go to state 80
    LBRACKET   shift, and go to state 81
    LPAREN     shift, and go to state 82
    NOT        shift, and go to state 83
    AND        shift, and go to state 84

    $default  reduce using rule 170 (type)

    id        go to state 85
    type      go to state 178
    type_arr  go to state 88
    type_ref  go to state 89
    box       go to state 90


State 107

  171 type_arr: LBRACKET type . RBRACKET
  172         | LBRACKET type . SEMICOLON p_lit RBRACKET

    RBRACKET   shift, and go to state 179
    SEMICOLON  shift, and go to state 180


State 108

  169 type: LPAREN RPAREN .

    $default  reduce using rule 169 (type)


State 109

  167 type: AND MUT . type

    ID         shift, and go to state 10
    BOX        shift, and go to state 67
    BOOL       shift, and go to state 68
    UEIGHT     shift, and go to state 69
    USIXTEEN   shift, and go to state 70
    UTHREETWO  shift, and go to state 71
    USIXFOUR   shift, and go to state 72
    IEIGHT     shift, and go to state 73
    ISIXTEEN   shift, and go to state 74
    ITHREETWO  shift, and go to state 75
    ISIXFOUR   shift, and go to state 76
    FTHREETWO  shift, and go to state 77
    FSIXFOUR   shift, and go to state 78
    CHAR       shift, and go to state 79
    STR        shift, and go to state 80
    LBRACKET   shift, and go to state 81
    LPAREN     shift, and go to state 82
    NOT        shift, and go to state 83
    AND        shift, and go to state 84

    ID        [reduce using rule 170 (type)]
    $default  reduce using rule 170 (type)

    id        go to state 85
    type      go to state 181
    type_arr  go to state 88
    type_ref  go to state 89
    box       go to state 90


State 110

  173 type_ref: AND type .

    $default  reduce using rule 173 (type_ref)


State 111

  197 enum_param: enum_param LPAREN types RPAREN .

    $default  reduce using rule 197 (enum_param)


State 112

  148 types: type COMMA . types

    ID         shift, and go to state 10
    BOX        shift, and go to state 67
    BOOL       shift, and go to state 68
    UEIGHT     shift, and go to state 69
    USIXTEEN   shift, and go to state 70
    UTHREETWO  shift, and go to state 71
    USIXFOUR   shift, and go to state 72
    IEIGHT     shift, and go to state 73
    ISIXTEEN   shift, and go to state 74
    ITHREETWO  shift, and go to state 75
    ISIXFOUR   shift, and go to state 76
    FTHREETWO  shift, and go to state 77
    FSIXFOUR   shift, and go to state 78
    CHAR       shift, and go to state 79
    STR        shift, and go to state 80
    LBRACKET   shift, and go to state 81
    LPAREN     shift, and go to state 82
    NOT        shift, and go to state 83
    AND        shift, and go to state 84

    $default  reduce using rule 170 (type)

    id        go to state 85
    types     go to state 182
    type      go to state 87
    type_arr  go to state 88
    type_ref  go to state 89
    box       go to state 90


State 113

  103 pats: pat COMMA pats .

    $default  reduce using rule 103 (pats)


State 114

  118 pat_struct: id LSQUIGBRACKET pat_fields RSQUIGBRACKET .

    $default  reduce using rule 118 (pat_struct)


State 115

  119 pat_fields: pat_field COMMA . pat_fields

    ID  shift, and go to state 10

    pat_fields  go to state 183
    pat_field   go to state 98
    id          go to state 99


State 116

  121 pat_field: id COLON . pat

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    MUT        shift, and go to state 26
    REF        shift, and go to state 27
    LBRACKET   shift, and go to state 28
    LPAREN     shift, and go to state 29
    SUB        shift, and go to state 30
    AND        shift, and go to state 31
    WC         shift, and go to state 32

    pat         go to state 184
    pat_arr     go to state 34
    pat_struct  go to state 35
    p_lit       go to state 36
    id          go to state 37
    pat_enum    go to state 41


State 117

  125 function: FN id LPAREN fn_params_seq RPAREN OBJECTACCESS type . block

    LSQUIGBRACKET  shift, and go to state 101

    block  go to state 185


State 118

  175 box_new: BOX . CLASSACCESS NEW LPAREN exp RPAREN

    CLASSACCESS  shift, and go to state 186


State 119

   95 if: IF . LPAREN exp RPAREN block

    LPAREN  shift, and go to state 187


State 120

   88 let: LET . pat COLON type EQU exp
   89    | LET . pat COLON type
   90    | LET . pat EQU exp
   91    | LET . pat

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    MUT        shift, and go to state 26
    REF        shift, and go to state 27
    LBRACKET   shift, and go to state 28
    LPAREN     shift, and go to state 29
    SUB        shift, and go to state 30
    AND        shift, and go to state 31
    WC         shift, and go to state 32

    pat         go to state 188
    pat_arr     go to state 34
    pat_struct  go to state 35
    p_lit       go to state 36
    id          go to state 37
    pat_enum    go to state 41


State 121

   94 loop: LOOP . block

    LSQUIGBRACKET  shift, and go to state 101

    block  go to state 189


State 122

   97 match: MATCH . LPAREN exp RPAREN LSQUIGBRACKET match_arms RSQUIGBRACKET

    LPAREN  shift, and go to state 190


State 123

  182 return: RETURN .

    $default  reduce using rule 182 (return)


State 124

   93 while: WHILE . LPAREN exp RPAREN block

    LPAREN  shift, and go to state 191


State 125

  122 arr: LBRACKET . exps RBRACKET

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exps          go to state 192
    exp           go to state 193
    arith1        go to state 134
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 126

   17 exp: LPAREN . exp RPAREN
   38 arith3: LPAREN . arith1 RPAREN
   79 unit: LPAREN . RPAREN

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    RPAREN     shift, and go to state 194
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    RPAREN    [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exp           go to state 195
    arith1        go to state 196
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 127

   51 neg: SUB . arith4

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    MUL        shift, and go to state 128
    AND        shift, and go to state 130

    arith4       go to state 197
    ptr          go to state 154
    addr         go to state 155
    deref        go to state 156
    addr_of_mut  go to state 157
    lit          go to state 170
    p_lit        go to state 171
    id           go to state 198
    enum_con     go to state 176


State 128

   75 deref: MUL . arith4
   76      | MUL . neg

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    AND        shift, and go to state 130

    arith4       go to state 199
    neg          go to state 200
    ptr          go to state 154
    addr         go to state 155
    deref        go to state 156
    addr_of_mut  go to state 157
    lit          go to state 170
    p_lit        go to state 171
    id           go to state 198
    enum_con     go to state 176


State 129

   69 not: NOT . arith1

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exp           go to state 201
    arith1        go to state 202
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 130

   73 addr: AND . arith4
   74     | AND . neg
   77 addr_of_mut: AND . MUT arith4
   78            | AND . MUT neg

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    MUT        shift, and go to state 203
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    AND        shift, and go to state 130

    arith4       go to state 204
    neg          go to state 205
    ptr          go to state 154
    addr         go to state 155
    deref        go to state 156
    addr_of_mut  go to state 157
    lit          go to state 170
    p_lit        go to state 171
    id           go to state 198
    enum_con     go to state 176


State 131

  181 block: LSQUIGBRACKET stmts . RSQUIGBRACKET

    RSQUIGBRACKET  shift, and go to state 206


State 132

    8 stmts: stmt . SEMICOLON stmts
    9      | stmt .

    SEMICOLON  shift, and go to state 207

    $default  reduce using rule 9 (stmts)


State 133

   12 stmt: exp .
   80 assign: exp . EQU exp
   81       | exp . PLUSEQUAL exp
   82       | exp . SUBEQUAL exp
   83       | exp . DIVEQUAL exp
   84       | exp . TIMESEQUAL exp
   85       | exp . MODEQUAL exp
   86       | exp . ANDEQUAL exp
   87       | exp . OREQUAL exp
   92 field_lookup: exp . PERIOD id
  123 arr_index: exp . LBRACKET exp RBRACKET

    LBRACKET    shift, and go to state 208
    PLUSEQUAL   shift, and go to state 209
    SUBEQUAL    shift, and go to state 210
    TIMESEQUAL  shift, and go to state 211
    DIVEQUAL    shift, and go to state 212
    MODEQUAL    shift, and go to state 213
    ANDEQUAL    shift, and go to state 214
    OREQUAL     shift, and go to state 215
    EQU         shift, and go to state 216
    PERIOD      shift, and go to state 217

    $default  reduce using rule 12 (stmt)


State 134

   18 exp: arith1 .
   46 add: arith1 . ADD arith1
   47 sub: arith1 . SUB arith1
   48 mul: arith1 . MUL arith1
   49 div: arith1 . DIV arith1
   50 mod: arith1 . MODOP arith1
   61 lt: arith1 . LESSTHAN arith1
   62 leq: arith1 . LESSTHANOREQUAL arith1
   63 gt: arith1 . GREATERTHAN arith1
   64 geq: arith1 . GREATERTHANOREQUAL arith1
   65 eq: arith1 . EQUALTO arith1
   66 neq: arith1 . NOTEQUAL arith1
   67 or: arith1 . LOGICALOR arith1
   68 and: arith1 . LOGICALAND arith1

    SUB                 shift, and go to state 218
    MUL                 shift, and go to state 219
    ADD                 shift, and go to state 220
    DIV                 shift, and go to state 221
    MODOP               shift, and go to state 222
    LOGICALOR           shift, and go to state 223
    LOGICALAND          shift, and go to state 224
    EQUALTO             shift, and go to state 225
    NOTEQUAL            shift, and go to state 226
    LESSTHAN            shift, and go to state 227
    GREATERTHAN         shift, and go to state 228
    LESSTHANOREQUAL     shift, and go to state 229
    GREATERTHANOREQUAL  shift, and go to state 230

    SUB       [reduce using rule 18 (exp)]
    MUL       [reduce using rule 18 (exp)]
    $default  reduce using rule 18 (exp)


State 135

   32 arith1: arith2 .

    $default  reduce using rule 32 (arith1)


State 136

   37 arith2: arith3 .

    $default  reduce using rule 37 (arith2)


State 137

   42 arith3: arith4 .

    $default  reduce using rule 42 (arith3)


State 138

   30 arith1: add .

    $default  reduce using rule 30 (arith1)


State 139

   31 arith1: sub .

    $default  reduce using rule 31 (arith1)


State 140

   33 arith2: mul .

    $default  reduce using rule 33 (arith2)


State 141

   34 arith2: div .

    $default  reduce using rule 34 (arith2)


State 142

   35 arith2: mod .

    $default  reduce using rule 35 (arith2)


State 143

   36 arith2: neg .

    $default  reduce using rule 36 (arith2)


State 144

   40 arith3: comp .

    $default  reduce using rule 40 (arith3)


State 145

   52 comp: lt .

    $default  reduce using rule 52 (comp)


State 146

   53 comp: leq .

    $default  reduce using rule 53 (comp)


State 147

   54 comp: gt .

    $default  reduce using rule 54 (comp)


State 148

   55 comp: geq .

    $default  reduce using rule 55 (comp)


State 149

   56 comp: eq .

    $default  reduce using rule 56 (comp)


State 150

   57 comp: neq .

    $default  reduce using rule 57 (comp)


State 151

   58 comp: or .

    $default  reduce using rule 58 (comp)


State 152

   59 comp: and .

    $default  reduce using rule 59 (comp)


State 153

   60 comp: not .

    $default  reduce using rule 60 (comp)


State 154

   44 arith4: ptr .

    $default  reduce using rule 44 (arith4)


State 155

   70 ptr: addr .

    $default  reduce using rule 70 (ptr)


State 156

   71 ptr: deref .

    $default  reduce using rule 71 (ptr)


State 157

   72 ptr: addr_of_mut .

    $default  reduce using rule 72 (ptr)


State 158

   28 exp: unit .

    $default  reduce using rule 28 (exp)


State 159

   25 exp: assign .

    $default  reduce using rule 25 (exp)


State 160

   13 stmt: let .

    $default  reduce using rule 13 (stmt)


State 161

   41 arith3: field_lookup .

    $default  reduce using rule 41 (arith3)


State 162

   20 exp: while .

    $default  reduce using rule 20 (exp)


State 163

   19 exp: loop .

    $default  reduce using rule 19 (exp)


State 164

   22 exp: if .
   96 if: if . ELSE block

    ELSE  shift, and go to state 231

    $default  reduce using rule 22 (exp)


State 165

   23 exp: match .

    $default  reduce using rule 23 (exp)


State 166

   26 exp: arr .

    $default  reduce using rule 26 (exp)


State 167

   27 exp: arr_index .

    $default  reduce using rule 27 (exp)


State 168

   14 stmt: function .

    $default  reduce using rule 14 (stmt)


State 169

   39 arith3: fn_call .

    $default  reduce using rule 39 (arith3)


State 170

   45 arith4: lit .

    $default  reduce using rule 45 (arith4)


State 171

  135 lit: p_lit .

    $default  reduce using rule 135 (lit)


State 172

   43 arith4: id .
  126 fn_call: id . LPAREN fn_args RPAREN
  184 arg_struct: id . LSQUIGBRACKET body RSQUIGBRACKET
  190 enum_con: id . CLASSACCESS id

    CLASSACCESS    shift, and go to state 232
    LPAREN         shift, and go to state 233
    LSQUIGBRACKET  shift, and go to state 234

    LPAREN    [reduce using rule 43 (arith4)]
    $default  reduce using rule 43 (arith4)


State 173

   21 exp: box_new .

    $default  reduce using rule 21 (exp)


State 174

   11 stmt: return .
  183 return: return . exp

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LITCHAR        [reduce using rule 29 (exp)]
    LITSTRING      [reduce using rule 29 (exp)]
    LITDEC         [reduce using rule 29 (exp)]
    LITBOOL        [reduce using rule 29 (exp)]
    ID             [reduce using rule 29 (exp)]
    BOX            [reduce using rule 29 (exp)]
    IF             [reduce using rule 29 (exp)]
    LOOP           [reduce using rule 29 (exp)]
    MATCH          [reduce using rule 29 (exp)]
    WHILE          [reduce using rule 29 (exp)]
    LBRACKET       [reduce using rule 29 (exp)]
    LPAREN         [reduce using rule 29 (exp)]
    RSQUIGBRACKET  reduce using rule 11 (stmt)
    RSQUIGBRACKET  [reduce using rule 29 (exp)]
    SEMICOLON      reduce using rule 11 (stmt)
    SEMICOLON      [reduce using rule 29 (exp)]
    SUB            [reduce using rule 29 (exp)]
    MUL            [reduce using rule 29 (exp)]
    NOT            [reduce using rule 29 (exp)]
    AND            [reduce using rule 29 (exp)]
    $default       reduce using rule 29 (exp)

    exp           go to state 235
    arith1        go to state 134
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 175

   24 exp: arg_struct .

    $default  reduce using rule 24 (exp)


State 176

  136 lit: enum_con .
  189 enum_con: enum_con . LPAREN exps RPAREN

    LPAREN  shift, and go to state 236

    LPAREN    [reduce using rule 136 (lit)]
    $default  reduce using rule 136 (lit)


State 177

  191 pat_enum: pat_enum LPAREN pats RPAREN .

    $default  reduce using rule 191 (pat_enum)


State 178

  174 box: BOX LESSTHAN type . GREATERTHAN

    GREATERTHAN  shift, and go to state 237


State 179

  171 type_arr: LBRACKET type RBRACKET .

    $default  reduce using rule 171 (type_arr)


State 180

  172 type_arr: LBRACKET type SEMICOLON . p_lit RBRACKET

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25

    p_lit  go to state 238


State 181

  167 type: AND MUT type .

    $default  reduce using rule 167 (type)


State 182

  148 types: type COMMA types .

    $default  reduce using rule 148 (types)


State 183

  119 pat_fields: pat_field COMMA pat_fields .

    $default  reduce using rule 119 (pat_fields)


State 184

  121 pat_field: id COLON pat .

    $default  reduce using rule 121 (pat_field)


State 185

  125 function: FN id LPAREN fn_params_seq RPAREN OBJECTACCESS type block .

    $default  reduce using rule 125 (function)


State 186

  175 box_new: BOX CLASSACCESS . NEW LPAREN exp RPAREN

    NEW  shift, and go to state 239


State 187

   95 if: IF LPAREN . exp RPAREN block

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exp           go to state 240
    arith1        go to state 134
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 188

   88 let: LET pat . COLON type EQU exp
   89    | LET pat . COLON type
   90    | LET pat . EQU exp
   91    | LET pat .

    COLON  shift, and go to state 241
    EQU    shift, and go to state 242

    $default  reduce using rule 91 (let)


State 189

   94 loop: LOOP block .

    $default  reduce using rule 94 (loop)


State 190

   97 match: MATCH LPAREN . exp RPAREN LSQUIGBRACKET match_arms RSQUIGBRACKET

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exp           go to state 243
    arith1        go to state 134
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 191

   93 while: WHILE LPAREN . exp RPAREN block

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exp           go to state 244
    arith1        go to state 134
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 192

  122 arr: LBRACKET exps . RBRACKET

    RBRACKET  shift, and go to state 245


State 193

   15 exps: exp . COMMA exps
   16     | exp .
   80 assign: exp . EQU exp
   81       | exp . PLUSEQUAL exp
   82       | exp . SUBEQUAL exp
   83       | exp . DIVEQUAL exp
   84       | exp . TIMESEQUAL exp
   85       | exp . MODEQUAL exp
   86       | exp . ANDEQUAL exp
   87       | exp . OREQUAL exp
   92 field_lookup: exp . PERIOD id
  123 arr_index: exp . LBRACKET exp RBRACKET

    LBRACKET    shift, and go to state 208
    COMMA       shift, and go to state 246
    PLUSEQUAL   shift, and go to state 209
    SUBEQUAL    shift, and go to state 210
    TIMESEQUAL  shift, and go to state 211
    DIVEQUAL    shift, and go to state 212
    MODEQUAL    shift, and go to state 213
    ANDEQUAL    shift, and go to state 214
    OREQUAL     shift, and go to state 215
    EQU         shift, and go to state 216
    PERIOD      shift, and go to state 217

    $default  reduce using rule 16 (exps)


State 194

   79 unit: LPAREN RPAREN .

    $default  reduce using rule 79 (unit)


State 195

   17 exp: LPAREN exp . RPAREN
   80 assign: exp . EQU exp
   81       | exp . PLUSEQUAL exp
   82       | exp . SUBEQUAL exp
   83       | exp . DIVEQUAL exp
   84       | exp . TIMESEQUAL exp
   85       | exp . MODEQUAL exp
   86       | exp . ANDEQUAL exp
   87       | exp . OREQUAL exp
   92 field_lookup: exp . PERIOD id
  123 arr_index: exp . LBRACKET exp RBRACKET

    LBRACKET    shift, and go to state 208
    RPAREN      shift, and go to state 247
    PLUSEQUAL   shift, and go to state 209
    SUBEQUAL    shift, and go to state 210
    TIMESEQUAL  shift, and go to state 211
    DIVEQUAL    shift, and go to state 212
    MODEQUAL    shift, and go to state 213
    ANDEQUAL    shift, and go to state 214
    OREQUAL     shift, and go to state 215
    EQU         shift, and go to state 216
    PERIOD      shift, and go to state 217


State 196

   18 exp: arith1 .
   38 arith3: LPAREN arith1 . RPAREN
   46 add: arith1 . ADD arith1
   47 sub: arith1 . SUB arith1
   48 mul: arith1 . MUL arith1
   49 div: arith1 . DIV arith1
   50 mod: arith1 . MODOP arith1
   61 lt: arith1 . LESSTHAN arith1
   62 leq: arith1 . LESSTHANOREQUAL arith1
   63 gt: arith1 . GREATERTHAN arith1
   64 geq: arith1 . GREATERTHANOREQUAL arith1
   65 eq: arith1 . EQUALTO arith1
   66 neq: arith1 . NOTEQUAL arith1
   67 or: arith1 . LOGICALOR arith1
   68 and: arith1 . LOGICALAND arith1

    RPAREN              shift, and go to state 248
    SUB                 shift, and go to state 218
    MUL                 shift, and go to state 219
    ADD                 shift, and go to state 220
    DIV                 shift, and go to state 221
    MODOP               shift, and go to state 222
    LOGICALOR           shift, and go to state 223
    LOGICALAND          shift, and go to state 224
    EQUALTO             shift, and go to state 225
    NOTEQUAL            shift, and go to state 226
    LESSTHAN            shift, and go to state 227
    GREATERTHAN         shift, and go to state 228
    LESSTHANOREQUAL     shift, and go to state 229
    GREATERTHANOREQUAL  shift, and go to state 230

    RPAREN    [reduce using rule 18 (exp)]
    $default  reduce using rule 18 (exp)


State 197

   51 neg: SUB arith4 .

    $default  reduce using rule 51 (neg)


State 198

   43 arith4: id .
  190 enum_con: id . CLASSACCESS id

    CLASSACCESS  shift, and go to state 232

    $default  reduce using rule 43 (arith4)


State 199

   75 deref: MUL arith4 .

    $default  reduce using rule 75 (deref)


State 200

   76 deref: MUL neg .

    $default  reduce using rule 76 (deref)


State 201

   80 assign: exp . EQU exp
   81       | exp . PLUSEQUAL exp
   82       | exp . SUBEQUAL exp
   83       | exp . DIVEQUAL exp
   84       | exp . TIMESEQUAL exp
   85       | exp . MODEQUAL exp
   86       | exp . ANDEQUAL exp
   87       | exp . OREQUAL exp
   92 field_lookup: exp . PERIOD id
  123 arr_index: exp . LBRACKET exp RBRACKET

    LBRACKET    shift, and go to state 208
    PLUSEQUAL   shift, and go to state 209
    SUBEQUAL    shift, and go to state 210
    TIMESEQUAL  shift, and go to state 211
    DIVEQUAL    shift, and go to state 212
    MODEQUAL    shift, and go to state 213
    ANDEQUAL    shift, and go to state 214
    OREQUAL     shift, and go to state 215
    EQU         shift, and go to state 216
    PERIOD      shift, and go to state 217


State 202

   18 exp: arith1 .
   46 add: arith1 . ADD arith1
   47 sub: arith1 . SUB arith1
   48 mul: arith1 . MUL arith1
   49 div: arith1 . DIV arith1
   50 mod: arith1 . MODOP arith1
   61 lt: arith1 . LESSTHAN arith1
   62 leq: arith1 . LESSTHANOREQUAL arith1
   63 gt: arith1 . GREATERTHAN arith1
   64 geq: arith1 . GREATERTHANOREQUAL arith1
   65 eq: arith1 . EQUALTO arith1
   66 neq: arith1 . NOTEQUAL arith1
   67 or: arith1 . LOGICALOR arith1
   68 and: arith1 . LOGICALAND arith1
   69 not: NOT arith1 .

    SUB    shift, and go to state 218
    MUL    shift, and go to state 219
    ADD    shift, and go to state 220
    DIV    shift, and go to state 221
    MODOP  shift, and go to state 222

    LBRACKET    reduce using rule 18 (exp)
    LBRACKET    [reduce using rule 69 (not)]
    PLUSEQUAL   reduce using rule 18 (exp)
    PLUSEQUAL   [reduce using rule 69 (not)]
    SUBEQUAL    reduce using rule 18 (exp)
    SUBEQUAL    [reduce using rule 69 (not)]
    TIMESEQUAL  reduce using rule 18 (exp)
    TIMESEQUAL  [reduce using rule 69 (not)]
    DIVEQUAL    reduce using rule 18 (exp)
    DIVEQUAL    [reduce using rule 69 (not)]
    MODEQUAL    reduce using rule 18 (exp)
    MODEQUAL    [reduce using rule 69 (not)]
    ANDEQUAL    reduce using rule 18 (exp)
    ANDEQUAL    [reduce using rule 69 (not)]
    OREQUAL     reduce using rule 18 (exp)
    OREQUAL     [reduce using rule 69 (not)]
    EQU         reduce using rule 18 (exp)
    EQU         [reduce using rule 69 (not)]
    PERIOD      reduce using rule 18 (exp)
    PERIOD      [reduce using rule 69 (not)]
    $default    reduce using rule 69 (not)


State 203

   77 addr_of_mut: AND MUT . arith4
   78            | AND MUT . neg

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    AND        shift, and go to state 130

    arith4       go to state 249
    neg          go to state 250
    ptr          go to state 154
    addr         go to state 155
    deref        go to state 156
    addr_of_mut  go to state 157
    lit          go to state 170
    p_lit        go to state 171
    id           go to state 198
    enum_con     go to state 176


State 204

   73 addr: AND arith4 .

    $default  reduce using rule 73 (addr)


State 205

   74 addr: AND neg .

    $default  reduce using rule 74 (addr)


State 206

  181 block: LSQUIGBRACKET stmts RSQUIGBRACKET .

    $default  reduce using rule 181 (block)


State 207

    8 stmts: stmt SEMICOLON . stmts

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    FN         shift, and go to state 2
    IF         shift, and go to state 119
    LET        shift, and go to state 120
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    RETURN     shift, and go to state 123
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET       [reduce using rule 29 (exp)]
    RSQUIGBRACKET  reduce using rule 10 (stmts)
    RSQUIGBRACKET  [reduce using rule 29 (exp)]
    $default       reduce using rule 29 (exp)

    stmts         go to state 251
    stmt          go to state 132
    exp           go to state 133
    arith1        go to state 134
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    let           go to state 160
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    function      go to state 168
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    return        go to state 174
    arg_struct    go to state 175
    enum_con      go to state 176


State 208

  123 arr_index: exp LBRACKET . exp RBRACKET

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exp           go to state 252
    arith1        go to state 134
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 209

   81 assign: exp PLUSEQUAL . exp

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LITCHAR    [reduce using rule 29 (exp)]
    LITSTRING  [reduce using rule 29 (exp)]
    LITDEC     [reduce using rule 29 (exp)]
    LITBOOL    [reduce using rule 29 (exp)]
    ID         [reduce using rule 29 (exp)]
    BOX        [reduce using rule 29 (exp)]
    IF         [reduce using rule 29 (exp)]
    LOOP       [reduce using rule 29 (exp)]
    MATCH      [reduce using rule 29 (exp)]
    WHILE      [reduce using rule 29 (exp)]
    LBRACKET   [reduce using rule 29 (exp)]
    LPAREN     [reduce using rule 29 (exp)]
    SUB        [reduce using rule 29 (exp)]
    MUL        [reduce using rule 29 (exp)]
    NOT        [reduce using rule 29 (exp)]
    AND        [reduce using rule 29 (exp)]
    $default   reduce using rule 29 (exp)

    exp           go to state 253
    arith1        go to state 134
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 210

   82 assign: exp SUBEQUAL . exp

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LITCHAR    [reduce using rule 29 (exp)]
    LITSTRING  [reduce using rule 29 (exp)]
    LITDEC     [reduce using rule 29 (exp)]
    LITBOOL    [reduce using rule 29 (exp)]
    ID         [reduce using rule 29 (exp)]
    BOX        [reduce using rule 29 (exp)]
    IF         [reduce using rule 29 (exp)]
    LOOP       [reduce using rule 29 (exp)]
    MATCH      [reduce using rule 29 (exp)]
    WHILE      [reduce using rule 29 (exp)]
    LBRACKET   [reduce using rule 29 (exp)]
    LPAREN     [reduce using rule 29 (exp)]
    SUB        [reduce using rule 29 (exp)]
    MUL        [reduce using rule 29 (exp)]
    NOT        [reduce using rule 29 (exp)]
    AND        [reduce using rule 29 (exp)]
    $default   reduce using rule 29 (exp)

    exp           go to state 254
    arith1        go to state 134
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 211

   84 assign: exp TIMESEQUAL . exp

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LITCHAR    [reduce using rule 29 (exp)]
    LITSTRING  [reduce using rule 29 (exp)]
    LITDEC     [reduce using rule 29 (exp)]
    LITBOOL    [reduce using rule 29 (exp)]
    ID         [reduce using rule 29 (exp)]
    BOX        [reduce using rule 29 (exp)]
    IF         [reduce using rule 29 (exp)]
    LOOP       [reduce using rule 29 (exp)]
    MATCH      [reduce using rule 29 (exp)]
    WHILE      [reduce using rule 29 (exp)]
    LBRACKET   [reduce using rule 29 (exp)]
    LPAREN     [reduce using rule 29 (exp)]
    SUB        [reduce using rule 29 (exp)]
    MUL        [reduce using rule 29 (exp)]
    NOT        [reduce using rule 29 (exp)]
    AND        [reduce using rule 29 (exp)]
    $default   reduce using rule 29 (exp)

    exp           go to state 255
    arith1        go to state 134
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 212

   83 assign: exp DIVEQUAL . exp

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LITCHAR    [reduce using rule 29 (exp)]
    LITSTRING  [reduce using rule 29 (exp)]
    LITDEC     [reduce using rule 29 (exp)]
    LITBOOL    [reduce using rule 29 (exp)]
    ID         [reduce using rule 29 (exp)]
    BOX        [reduce using rule 29 (exp)]
    IF         [reduce using rule 29 (exp)]
    LOOP       [reduce using rule 29 (exp)]
    MATCH      [reduce using rule 29 (exp)]
    WHILE      [reduce using rule 29 (exp)]
    LBRACKET   [reduce using rule 29 (exp)]
    LPAREN     [reduce using rule 29 (exp)]
    SUB        [reduce using rule 29 (exp)]
    MUL        [reduce using rule 29 (exp)]
    NOT        [reduce using rule 29 (exp)]
    AND        [reduce using rule 29 (exp)]
    $default   reduce using rule 29 (exp)

    exp           go to state 256
    arith1        go to state 134
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 213

   85 assign: exp MODEQUAL . exp

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LITCHAR    [reduce using rule 29 (exp)]
    LITSTRING  [reduce using rule 29 (exp)]
    LITDEC     [reduce using rule 29 (exp)]
    LITBOOL    [reduce using rule 29 (exp)]
    ID         [reduce using rule 29 (exp)]
    BOX        [reduce using rule 29 (exp)]
    IF         [reduce using rule 29 (exp)]
    LOOP       [reduce using rule 29 (exp)]
    MATCH      [reduce using rule 29 (exp)]
    WHILE      [reduce using rule 29 (exp)]
    LBRACKET   [reduce using rule 29 (exp)]
    LPAREN     [reduce using rule 29 (exp)]
    SUB        [reduce using rule 29 (exp)]
    MUL        [reduce using rule 29 (exp)]
    NOT        [reduce using rule 29 (exp)]
    AND        [reduce using rule 29 (exp)]
    $default   reduce using rule 29 (exp)

    exp           go to state 257
    arith1        go to state 134
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 214

   86 assign: exp ANDEQUAL . exp

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LITCHAR    [reduce using rule 29 (exp)]
    LITSTRING  [reduce using rule 29 (exp)]
    LITDEC     [reduce using rule 29 (exp)]
    LITBOOL    [reduce using rule 29 (exp)]
    ID         [reduce using rule 29 (exp)]
    BOX        [reduce using rule 29 (exp)]
    IF         [reduce using rule 29 (exp)]
    LOOP       [reduce using rule 29 (exp)]
    MATCH      [reduce using rule 29 (exp)]
    WHILE      [reduce using rule 29 (exp)]
    LBRACKET   [reduce using rule 29 (exp)]
    LPAREN     [reduce using rule 29 (exp)]
    SUB        [reduce using rule 29 (exp)]
    MUL        [reduce using rule 29 (exp)]
    NOT        [reduce using rule 29 (exp)]
    AND        [reduce using rule 29 (exp)]
    $default   reduce using rule 29 (exp)

    exp           go to state 258
    arith1        go to state 134
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 215

   87 assign: exp OREQUAL . exp

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LITCHAR    [reduce using rule 29 (exp)]
    LITSTRING  [reduce using rule 29 (exp)]
    LITDEC     [reduce using rule 29 (exp)]
    LITBOOL    [reduce using rule 29 (exp)]
    ID         [reduce using rule 29 (exp)]
    BOX        [reduce using rule 29 (exp)]
    IF         [reduce using rule 29 (exp)]
    LOOP       [reduce using rule 29 (exp)]
    MATCH      [reduce using rule 29 (exp)]
    WHILE      [reduce using rule 29 (exp)]
    LBRACKET   [reduce using rule 29 (exp)]
    LPAREN     [reduce using rule 29 (exp)]
    SUB        [reduce using rule 29 (exp)]
    MUL        [reduce using rule 29 (exp)]
    NOT        [reduce using rule 29 (exp)]
    AND        [reduce using rule 29 (exp)]
    $default   reduce using rule 29 (exp)

    exp           go to state 259
    arith1        go to state 134
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 216

   80 assign: exp EQU . exp

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LITCHAR    [reduce using rule 29 (exp)]
    LITSTRING  [reduce using rule 29 (exp)]
    LITDEC     [reduce using rule 29 (exp)]
    LITBOOL    [reduce using rule 29 (exp)]
    ID         [reduce using rule 29 (exp)]
    BOX        [reduce using rule 29 (exp)]
    IF         [reduce using rule 29 (exp)]
    LOOP       [reduce using rule 29 (exp)]
    MATCH      [reduce using rule 29 (exp)]
    WHILE      [reduce using rule 29 (exp)]
    LBRACKET   [reduce using rule 29 (exp)]
    LPAREN     [reduce using rule 29 (exp)]
    SUB        [reduce using rule 29 (exp)]
    MUL        [reduce using rule 29 (exp)]
    NOT        [reduce using rule 29 (exp)]
    AND        [reduce using rule 29 (exp)]
    $default   reduce using rule 29 (exp)

    exp           go to state 260
    arith1        go to state 134
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 217

   92 field_lookup: exp PERIOD . id

    ID  shift, and go to state 10

    id  go to state 261


State 218

   47 sub: arith1 SUB . arith1

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exp           go to state 201
    arith1        go to state 262
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 219

   48 mul: arith1 MUL . arith1

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exp           go to state 201
    arith1        go to state 263
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 220

   46 add: arith1 ADD . arith1

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exp           go to state 201
    arith1        go to state 264
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 221

   49 div: arith1 DIV . arith1

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exp           go to state 201
    arith1        go to state 265
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 222

   50 mod: arith1 MODOP . arith1

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exp           go to state 201
    arith1        go to state 266
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 223

   67 or: arith1 LOGICALOR . arith1

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exp           go to state 201
    arith1        go to state 267
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 224

   68 and: arith1 LOGICALAND . arith1

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exp           go to state 201
    arith1        go to state 268
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 225

   65 eq: arith1 EQUALTO . arith1

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exp           go to state 201
    arith1        go to state 269
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 226

   66 neq: arith1 NOTEQUAL . arith1

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exp           go to state 201
    arith1        go to state 270
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 227

   61 lt: arith1 LESSTHAN . arith1

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exp           go to state 201
    arith1        go to state 271
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 228

   63 gt: arith1 GREATERTHAN . arith1

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exp           go to state 201
    arith1        go to state 272
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 229

   62 leq: arith1 LESSTHANOREQUAL . arith1

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exp           go to state 201
    arith1        go to state 273
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 230

   64 geq: arith1 GREATERTHANOREQUAL . arith1

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exp           go to state 201
    arith1        go to state 274
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 231

   96 if: if ELSE . block

    LSQUIGBRACKET  shift, and go to state 101

    block  go to state 275


State 232

  190 enum_con: id CLASSACCESS . id

    ID  shift, and go to state 10

    id  go to state 276


State 233

  126 fn_call: id LPAREN . fn_args RPAREN

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118

    $default  reduce using rule 128 (fn_args)

    fn_call     go to state 277
    fn_args     go to state 278
    fn_arg      go to state 279
    lit         go to state 280
    p_lit       go to state 171
    id          go to state 281
    box_new     go to state 282
    arg_struct  go to state 283
    enum_con    go to state 176


State 234

  184 arg_struct: id LSQUIGBRACKET . body RSQUIGBRACKET

    ID  shift, and go to state 10

    id         go to state 284
    body       go to state 285
    param_arg  go to state 286


State 235

   80 assign: exp . EQU exp
   81       | exp . PLUSEQUAL exp
   82       | exp . SUBEQUAL exp
   83       | exp . DIVEQUAL exp
   84       | exp . TIMESEQUAL exp
   85       | exp . MODEQUAL exp
   86       | exp . ANDEQUAL exp
   87       | exp . OREQUAL exp
   92 field_lookup: exp . PERIOD id
  123 arr_index: exp . LBRACKET exp RBRACKET
  183 return: return exp .

    LBRACKET    shift, and go to state 208
    PLUSEQUAL   shift, and go to state 209
    SUBEQUAL    shift, and go to state 210
    TIMESEQUAL  shift, and go to state 211
    DIVEQUAL    shift, and go to state 212
    MODEQUAL    shift, and go to state 213
    ANDEQUAL    shift, and go to state 214
    OREQUAL     shift, and go to state 215
    EQU         shift, and go to state 216
    PERIOD      shift, and go to state 217

    LBRACKET    [reduce using rule 183 (return)]
    PLUSEQUAL   [reduce using rule 183 (return)]
    SUBEQUAL    [reduce using rule 183 (return)]
    TIMESEQUAL  [reduce using rule 183 (return)]
    DIVEQUAL    [reduce using rule 183 (return)]
    MODEQUAL    [reduce using rule 183 (return)]
    ANDEQUAL    [reduce using rule 183 (return)]
    OREQUAL     [reduce using rule 183 (return)]
    EQU         [reduce using rule 183 (return)]
    PERIOD      [reduce using rule 183 (return)]
    $default    reduce using rule 183 (return)


State 236

  189 enum_con: enum_con LPAREN . exps RPAREN

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exps          go to state 287
    exp           go to state 193
    arith1        go to state 134
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 237

  174 box: BOX LESSTHAN type GREATERTHAN .

    $default  reduce using rule 174 (box)


State 238

  172 type_arr: LBRACKET type SEMICOLON p_lit . RBRACKET

    RBRACKET  shift, and go to state 288


State 239

  175 box_new: BOX CLASSACCESS NEW . LPAREN exp RPAREN

    LPAREN  shift, and go to state 289


State 240

   80 assign: exp . EQU exp
   81       | exp . PLUSEQUAL exp
   82       | exp . SUBEQUAL exp
   83       | exp . DIVEQUAL exp
   84       | exp . TIMESEQUAL exp
   85       | exp . MODEQUAL exp
   86       | exp . ANDEQUAL exp
   87       | exp . OREQUAL exp
   92 field_lookup: exp . PERIOD id
   95 if: IF LPAREN exp . RPAREN block
  123 arr_index: exp . LBRACKET exp RBRACKET

    LBRACKET    shift, and go to state 208
    RPAREN      shift, and go to state 290
    PLUSEQUAL   shift, and go to state 209
    SUBEQUAL    shift, and go to state 210
    TIMESEQUAL  shift, and go to state 211
    DIVEQUAL    shift, and go to state 212
    MODEQUAL    shift, and go to state 213
    ANDEQUAL    shift, and go to state 214
    OREQUAL     shift, and go to state 215
    EQU         shift, and go to state 216
    PERIOD      shift, and go to state 217


State 241

   88 let: LET pat COLON . type EQU exp
   89    | LET pat COLON . type

    ID         shift, and go to state 10
    BOX        shift, and go to state 67
    BOOL       shift, and go to state 68
    UEIGHT     shift, and go to state 69
    USIXTEEN   shift, and go to state 70
    UTHREETWO  shift, and go to state 71
    USIXFOUR   shift, and go to state 72
    IEIGHT     shift, and go to state 73
    ISIXTEEN   shift, and go to state 74
    ITHREETWO  shift, and go to state 75
    ISIXFOUR   shift, and go to state 76
    FTHREETWO  shift, and go to state 77
    FSIXFOUR   shift, and go to state 78
    CHAR       shift, and go to state 79
    STR        shift, and go to state 80
    LBRACKET   shift, and go to state 81
    LPAREN     shift, and go to state 82
    NOT        shift, and go to state 83
    AND        shift, and go to state 84

    $default  reduce using rule 170 (type)

    id        go to state 85
    type      go to state 291
    type_arr  go to state 88
    type_ref  go to state 89
    box       go to state 90


State 242

   90 let: LET pat EQU . exp

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exp           go to state 292
    arith1        go to state 134
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 243

   80 assign: exp . EQU exp
   81       | exp . PLUSEQUAL exp
   82       | exp . SUBEQUAL exp
   83       | exp . DIVEQUAL exp
   84       | exp . TIMESEQUAL exp
   85       | exp . MODEQUAL exp
   86       | exp . ANDEQUAL exp
   87       | exp . OREQUAL exp
   92 field_lookup: exp . PERIOD id
   97 match: MATCH LPAREN exp . RPAREN LSQUIGBRACKET match_arms RSQUIGBRACKET
  123 arr_index: exp . LBRACKET exp RBRACKET

    LBRACKET    shift, and go to state 208
    RPAREN      shift, and go to state 293
    PLUSEQUAL   shift, and go to state 209
    SUBEQUAL    shift, and go to state 210
    TIMESEQUAL  shift, and go to state 211
    DIVEQUAL    shift, and go to state 212
    MODEQUAL    shift, and go to state 213
    ANDEQUAL    shift, and go to state 214
    OREQUAL     shift, and go to state 215
    EQU         shift, and go to state 216
    PERIOD      shift, and go to state 217


State 244

   80 assign: exp . EQU exp
   81       | exp . PLUSEQUAL exp
   82       | exp . SUBEQUAL exp
   83       | exp . DIVEQUAL exp
   84       | exp . TIMESEQUAL exp
   85       | exp . MODEQUAL exp
   86       | exp . ANDEQUAL exp
   87       | exp . OREQUAL exp
   92 field_lookup: exp . PERIOD id
   93 while: WHILE LPAREN exp . RPAREN block
  123 arr_index: exp . LBRACKET exp RBRACKET

    LBRACKET    shift, and go to state 208
    RPAREN      shift, and go to state 294
    PLUSEQUAL   shift, and go to state 209
    SUBEQUAL    shift, and go to state 210
    TIMESEQUAL  shift, and go to state 211
    DIVEQUAL    shift, and go to state 212
    MODEQUAL    shift, and go to state 213
    ANDEQUAL    shift, and go to state 214
    OREQUAL     shift, and go to state 215
    EQU         shift, and go to state 216
    PERIOD      shift, and go to state 217


State 245

  122 arr: LBRACKET exps RBRACKET .

    $default  reduce using rule 122 (arr)


State 246

   15 exps: exp COMMA . exps

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exps          go to state 295
    exp           go to state 193
    arith1        go to state 134
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 247

   17 exp: LPAREN exp RPAREN .

    $default  reduce using rule 17 (exp)


State 248

   38 arith3: LPAREN arith1 RPAREN .

    $default  reduce using rule 38 (arith3)


State 249

   77 addr_of_mut: AND MUT arith4 .

    $default  reduce using rule 77 (addr_of_mut)


State 250

   78 addr_of_mut: AND MUT neg .

    $default  reduce using rule 78 (addr_of_mut)


State 251

    8 stmts: stmt SEMICOLON stmts .

    $default  reduce using rule 8 (stmts)


State 252

   80 assign: exp . EQU exp
   81       | exp . PLUSEQUAL exp
   82       | exp . SUBEQUAL exp
   83       | exp . DIVEQUAL exp
   84       | exp . TIMESEQUAL exp
   85       | exp . MODEQUAL exp
   86       | exp . ANDEQUAL exp
   87       | exp . OREQUAL exp
   92 field_lookup: exp . PERIOD id
  123 arr_index: exp . LBRACKET exp RBRACKET
  123          | exp LBRACKET exp . RBRACKET

    LBRACKET    shift, and go to state 208
    RBRACKET    shift, and go to state 296
    PLUSEQUAL   shift, and go to state 209
    SUBEQUAL    shift, and go to state 210
    TIMESEQUAL  shift, and go to state 211
    DIVEQUAL    shift, and go to state 212
    MODEQUAL    shift, and go to state 213
    ANDEQUAL    shift, and go to state 214
    OREQUAL     shift, and go to state 215
    EQU         shift, and go to state 216
    PERIOD      shift, and go to state 217


State 253

   80 assign: exp . EQU exp
   81       | exp . PLUSEQUAL exp
   81       | exp PLUSEQUAL exp .
   82       | exp . SUBEQUAL exp
   83       | exp . DIVEQUAL exp
   84       | exp . TIMESEQUAL exp
   85       | exp . MODEQUAL exp
   86       | exp . ANDEQUAL exp
   87       | exp . OREQUAL exp
   92 field_lookup: exp . PERIOD id
  123 arr_index: exp . LBRACKET exp RBRACKET

    LBRACKET    shift, and go to state 208
    PLUSEQUAL   shift, and go to state 209
    SUBEQUAL    shift, and go to state 210
    TIMESEQUAL  shift, and go to state 211
    DIVEQUAL    shift, and go to state 212
    MODEQUAL    shift, and go to state 213
    ANDEQUAL    shift, and go to state 214
    OREQUAL     shift, and go to state 215
    EQU         shift, and go to state 216
    PERIOD      shift, and go to state 217

    LBRACKET    [reduce using rule 81 (assign)]
    PLUSEQUAL   [reduce using rule 81 (assign)]
    SUBEQUAL    [reduce using rule 81 (assign)]
    TIMESEQUAL  [reduce using rule 81 (assign)]
    DIVEQUAL    [reduce using rule 81 (assign)]
    MODEQUAL    [reduce using rule 81 (assign)]
    ANDEQUAL    [reduce using rule 81 (assign)]
    OREQUAL     [reduce using rule 81 (assign)]
    EQU         [reduce using rule 81 (assign)]
    PERIOD      [reduce using rule 81 (assign)]
    $default    reduce using rule 81 (assign)


State 254

   80 assign: exp . EQU exp
   81       | exp . PLUSEQUAL exp
   82       | exp . SUBEQUAL exp
   82       | exp SUBEQUAL exp .
   83       | exp . DIVEQUAL exp
   84       | exp . TIMESEQUAL exp
   85       | exp . MODEQUAL exp
   86       | exp . ANDEQUAL exp
   87       | exp . OREQUAL exp
   92 field_lookup: exp . PERIOD id
  123 arr_index: exp . LBRACKET exp RBRACKET

    LBRACKET    shift, and go to state 208
    PLUSEQUAL   shift, and go to state 209
    SUBEQUAL    shift, and go to state 210
    TIMESEQUAL  shift, and go to state 211
    DIVEQUAL    shift, and go to state 212
    MODEQUAL    shift, and go to state 213
    ANDEQUAL    shift, and go to state 214
    OREQUAL     shift, and go to state 215
    EQU         shift, and go to state 216
    PERIOD      shift, and go to state 217

    LBRACKET    [reduce using rule 82 (assign)]
    PLUSEQUAL   [reduce using rule 82 (assign)]
    SUBEQUAL    [reduce using rule 82 (assign)]
    TIMESEQUAL  [reduce using rule 82 (assign)]
    DIVEQUAL    [reduce using rule 82 (assign)]
    MODEQUAL    [reduce using rule 82 (assign)]
    ANDEQUAL    [reduce using rule 82 (assign)]
    OREQUAL     [reduce using rule 82 (assign)]
    EQU         [reduce using rule 82 (assign)]
    PERIOD      [reduce using rule 82 (assign)]
    $default    reduce using rule 82 (assign)


State 255

   80 assign: exp . EQU exp
   81       | exp . PLUSEQUAL exp
   82       | exp . SUBEQUAL exp
   83       | exp . DIVEQUAL exp
   84       | exp . TIMESEQUAL exp
   84       | exp TIMESEQUAL exp .
   85       | exp . MODEQUAL exp
   86       | exp . ANDEQUAL exp
   87       | exp . OREQUAL exp
   92 field_lookup: exp . PERIOD id
  123 arr_index: exp . LBRACKET exp RBRACKET

    LBRACKET    shift, and go to state 208
    PLUSEQUAL   shift, and go to state 209
    SUBEQUAL    shift, and go to state 210
    TIMESEQUAL  shift, and go to state 211
    DIVEQUAL    shift, and go to state 212
    MODEQUAL    shift, and go to state 213
    ANDEQUAL    shift, and go to state 214
    OREQUAL     shift, and go to state 215
    EQU         shift, and go to state 216
    PERIOD      shift, and go to state 217

    LBRACKET    [reduce using rule 84 (assign)]
    PLUSEQUAL   [reduce using rule 84 (assign)]
    SUBEQUAL    [reduce using rule 84 (assign)]
    TIMESEQUAL  [reduce using rule 84 (assign)]
    DIVEQUAL    [reduce using rule 84 (assign)]
    MODEQUAL    [reduce using rule 84 (assign)]
    ANDEQUAL    [reduce using rule 84 (assign)]
    OREQUAL     [reduce using rule 84 (assign)]
    EQU         [reduce using rule 84 (assign)]
    PERIOD      [reduce using rule 84 (assign)]
    $default    reduce using rule 84 (assign)


State 256

   80 assign: exp . EQU exp
   81       | exp . PLUSEQUAL exp
   82       | exp . SUBEQUAL exp
   83       | exp . DIVEQUAL exp
   83       | exp DIVEQUAL exp .
   84       | exp . TIMESEQUAL exp
   85       | exp . MODEQUAL exp
   86       | exp . ANDEQUAL exp
   87       | exp . OREQUAL exp
   92 field_lookup: exp . PERIOD id
  123 arr_index: exp . LBRACKET exp RBRACKET

    LBRACKET    shift, and go to state 208
    PLUSEQUAL   shift, and go to state 209
    SUBEQUAL    shift, and go to state 210
    TIMESEQUAL  shift, and go to state 211
    DIVEQUAL    shift, and go to state 212
    MODEQUAL    shift, and go to state 213
    ANDEQUAL    shift, and go to state 214
    OREQUAL     shift, and go to state 215
    EQU         shift, and go to state 216
    PERIOD      shift, and go to state 217

    LBRACKET    [reduce using rule 83 (assign)]
    PLUSEQUAL   [reduce using rule 83 (assign)]
    SUBEQUAL    [reduce using rule 83 (assign)]
    TIMESEQUAL  [reduce using rule 83 (assign)]
    DIVEQUAL    [reduce using rule 83 (assign)]
    MODEQUAL    [reduce using rule 83 (assign)]
    ANDEQUAL    [reduce using rule 83 (assign)]
    OREQUAL     [reduce using rule 83 (assign)]
    EQU         [reduce using rule 83 (assign)]
    PERIOD      [reduce using rule 83 (assign)]
    $default    reduce using rule 83 (assign)


State 257

   80 assign: exp . EQU exp
   81       | exp . PLUSEQUAL exp
   82       | exp . SUBEQUAL exp
   83       | exp . DIVEQUAL exp
   84       | exp . TIMESEQUAL exp
   85       | exp . MODEQUAL exp
   85       | exp MODEQUAL exp .
   86       | exp . ANDEQUAL exp
   87       | exp . OREQUAL exp
   92 field_lookup: exp . PERIOD id
  123 arr_index: exp . LBRACKET exp RBRACKET

    LBRACKET    shift, and go to state 208
    PLUSEQUAL   shift, and go to state 209
    SUBEQUAL    shift, and go to state 210
    TIMESEQUAL  shift, and go to state 211
    DIVEQUAL    shift, and go to state 212
    MODEQUAL    shift, and go to state 213
    ANDEQUAL    shift, and go to state 214
    OREQUAL     shift, and go to state 215
    EQU         shift, and go to state 216
    PERIOD      shift, and go to state 217

    LBRACKET    [reduce using rule 85 (assign)]
    PLUSEQUAL   [reduce using rule 85 (assign)]
    SUBEQUAL    [reduce using rule 85 (assign)]
    TIMESEQUAL  [reduce using rule 85 (assign)]
    DIVEQUAL    [reduce using rule 85 (assign)]
    MODEQUAL    [reduce using rule 85 (assign)]
    ANDEQUAL    [reduce using rule 85 (assign)]
    OREQUAL     [reduce using rule 85 (assign)]
    EQU         [reduce using rule 85 (assign)]
    PERIOD      [reduce using rule 85 (assign)]
    $default    reduce using rule 85 (assign)


State 258

   80 assign: exp . EQU exp
   81       | exp . PLUSEQUAL exp
   82       | exp . SUBEQUAL exp
   83       | exp . DIVEQUAL exp
   84       | exp . TIMESEQUAL exp
   85       | exp . MODEQUAL exp
   86       | exp . ANDEQUAL exp
   86       | exp ANDEQUAL exp .
   87       | exp . OREQUAL exp
   92 field_lookup: exp . PERIOD id
  123 arr_index: exp . LBRACKET exp RBRACKET

    LBRACKET    shift, and go to state 208
    PLUSEQUAL   shift, and go to state 209
    SUBEQUAL    shift, and go to state 210
    TIMESEQUAL  shift, and go to state 211
    DIVEQUAL    shift, and go to state 212
    MODEQUAL    shift, and go to state 213
    ANDEQUAL    shift, and go to state 214
    OREQUAL     shift, and go to state 215
    EQU         shift, and go to state 216
    PERIOD      shift, and go to state 217

    LBRACKET    [reduce using rule 86 (assign)]
    PLUSEQUAL   [reduce using rule 86 (assign)]
    SUBEQUAL    [reduce using rule 86 (assign)]
    TIMESEQUAL  [reduce using rule 86 (assign)]
    DIVEQUAL    [reduce using rule 86 (assign)]
    MODEQUAL    [reduce using rule 86 (assign)]
    ANDEQUAL    [reduce using rule 86 (assign)]
    OREQUAL     [reduce using rule 86 (assign)]
    EQU         [reduce using rule 86 (assign)]
    PERIOD      [reduce using rule 86 (assign)]
    $default    reduce using rule 86 (assign)


State 259

   80 assign: exp . EQU exp
   81       | exp . PLUSEQUAL exp
   82       | exp . SUBEQUAL exp
   83       | exp . DIVEQUAL exp
   84       | exp . TIMESEQUAL exp
   85       | exp . MODEQUAL exp
   86       | exp . ANDEQUAL exp
   87       | exp . OREQUAL exp
   87       | exp OREQUAL exp .
   92 field_lookup: exp . PERIOD id
  123 arr_index: exp . LBRACKET exp RBRACKET

    LBRACKET    shift, and go to state 208
    PLUSEQUAL   shift, and go to state 209
    SUBEQUAL    shift, and go to state 210
    TIMESEQUAL  shift, and go to state 211
    DIVEQUAL    shift, and go to state 212
    MODEQUAL    shift, and go to state 213
    ANDEQUAL    shift, and go to state 214
    OREQUAL     shift, and go to state 215
    EQU         shift, and go to state 216
    PERIOD      shift, and go to state 217

    LBRACKET    [reduce using rule 87 (assign)]
    PLUSEQUAL   [reduce using rule 87 (assign)]
    SUBEQUAL    [reduce using rule 87 (assign)]
    TIMESEQUAL  [reduce using rule 87 (assign)]
    DIVEQUAL    [reduce using rule 87 (assign)]
    MODEQUAL    [reduce using rule 87 (assign)]
    ANDEQUAL    [reduce using rule 87 (assign)]
    OREQUAL     [reduce using rule 87 (assign)]
    EQU         [reduce using rule 87 (assign)]
    PERIOD      [reduce using rule 87 (assign)]
    $default    reduce using rule 87 (assign)


State 260

   80 assign: exp . EQU exp
   80       | exp EQU exp .
   81       | exp . PLUSEQUAL exp
   82       | exp . SUBEQUAL exp
   83       | exp . DIVEQUAL exp
   84       | exp . TIMESEQUAL exp
   85       | exp . MODEQUAL exp
   86       | exp . ANDEQUAL exp
   87       | exp . OREQUAL exp
   92 field_lookup: exp . PERIOD id
  123 arr_index: exp . LBRACKET exp RBRACKET

    LBRACKET    shift, and go to state 208
    PLUSEQUAL   shift, and go to state 209
    SUBEQUAL    shift, and go to state 210
    TIMESEQUAL  shift, and go to state 211
    DIVEQUAL    shift, and go to state 212
    MODEQUAL    shift, and go to state 213
    ANDEQUAL    shift, and go to state 214
    OREQUAL     shift, and go to state 215
    EQU         shift, and go to state 216
    PERIOD      shift, and go to state 217

    LBRACKET    [reduce using rule 80 (assign)]
    PLUSEQUAL   [reduce using rule 80 (assign)]
    SUBEQUAL    [reduce using rule 80 (assign)]
    TIMESEQUAL  [reduce using rule 80 (assign)]
    DIVEQUAL    [reduce using rule 80 (assign)]
    MODEQUAL    [reduce using rule 80 (assign)]
    ANDEQUAL    [reduce using rule 80 (assign)]
    OREQUAL     [reduce using rule 80 (assign)]
    EQU         [reduce using rule 80 (assign)]
    PERIOD      [reduce using rule 80 (assign)]
    $default    reduce using rule 80 (assign)


State 261

   92 field_lookup: exp PERIOD id .

    $default  reduce using rule 92 (field_lookup)


State 262

   18 exp: arith1 .
   46 add: arith1 . ADD arith1
   47 sub: arith1 . SUB arith1
   47    | arith1 SUB arith1 .
   48 mul: arith1 . MUL arith1
   49 div: arith1 . DIV arith1
   50 mod: arith1 . MODOP arith1
   61 lt: arith1 . LESSTHAN arith1
   62 leq: arith1 . LESSTHANOREQUAL arith1
   63 gt: arith1 . GREATERTHAN arith1
   64 geq: arith1 . GREATERTHANOREQUAL arith1
   65 eq: arith1 . EQUALTO arith1
   66 neq: arith1 . NOTEQUAL arith1
   67 or: arith1 . LOGICALOR arith1
   68 and: arith1 . LOGICALAND arith1

    MUL    shift, and go to state 219
    DIV    shift, and go to state 221
    MODOP  shift, and go to state 222

    LBRACKET    reduce using rule 18 (exp)
    LBRACKET    [reduce using rule 47 (sub)]
    PLUSEQUAL   reduce using rule 18 (exp)
    PLUSEQUAL   [reduce using rule 47 (sub)]
    SUBEQUAL    reduce using rule 18 (exp)
    SUBEQUAL    [reduce using rule 47 (sub)]
    TIMESEQUAL  reduce using rule 18 (exp)
    TIMESEQUAL  [reduce using rule 47 (sub)]
    DIVEQUAL    reduce using rule 18 (exp)
    DIVEQUAL    [reduce using rule 47 (sub)]
    MODEQUAL    reduce using rule 18 (exp)
    MODEQUAL    [reduce using rule 47 (sub)]
    ANDEQUAL    reduce using rule 18 (exp)
    ANDEQUAL    [reduce using rule 47 (sub)]
    OREQUAL     reduce using rule 18 (exp)
    OREQUAL     [reduce using rule 47 (sub)]
    EQU         reduce using rule 18 (exp)
    EQU         [reduce using rule 47 (sub)]
    PERIOD      reduce using rule 18 (exp)
    PERIOD      [reduce using rule 47 (sub)]
    $default    reduce using rule 47 (sub)


State 263

   18 exp: arith1 .
   46 add: arith1 . ADD arith1
   47 sub: arith1 . SUB arith1
   48 mul: arith1 . MUL arith1
   48    | arith1 MUL arith1 .
   49 div: arith1 . DIV arith1
   50 mod: arith1 . MODOP arith1
   61 lt: arith1 . LESSTHAN arith1
   62 leq: arith1 . LESSTHANOREQUAL arith1
   63 gt: arith1 . GREATERTHAN arith1
   64 geq: arith1 . GREATERTHANOREQUAL arith1
   65 eq: arith1 . EQUALTO arith1
   66 neq: arith1 . NOTEQUAL arith1
   67 or: arith1 . LOGICALOR arith1
   68 and: arith1 . LOGICALAND arith1

    LBRACKET    reduce using rule 18 (exp)
    LBRACKET    [reduce using rule 48 (mul)]
    PLUSEQUAL   reduce using rule 18 (exp)
    PLUSEQUAL   [reduce using rule 48 (mul)]
    SUBEQUAL    reduce using rule 18 (exp)
    SUBEQUAL    [reduce using rule 48 (mul)]
    TIMESEQUAL  reduce using rule 18 (exp)
    TIMESEQUAL  [reduce using rule 48 (mul)]
    DIVEQUAL    reduce using rule 18 (exp)
    DIVEQUAL    [reduce using rule 48 (mul)]
    MODEQUAL    reduce using rule 18 (exp)
    MODEQUAL    [reduce using rule 48 (mul)]
    ANDEQUAL    reduce using rule 18 (exp)
    ANDEQUAL    [reduce using rule 48 (mul)]
    OREQUAL     reduce using rule 18 (exp)
    OREQUAL     [reduce using rule 48 (mul)]
    EQU         reduce using rule 18 (exp)
    EQU         [reduce using rule 48 (mul)]
    PERIOD      reduce using rule 18 (exp)
    PERIOD      [reduce using rule 48 (mul)]
    $default    reduce using rule 48 (mul)


State 264

   18 exp: arith1 .
   46 add: arith1 . ADD arith1
   46    | arith1 ADD arith1 .
   47 sub: arith1 . SUB arith1
   48 mul: arith1 . MUL arith1
   49 div: arith1 . DIV arith1
   50 mod: arith1 . MODOP arith1
   61 lt: arith1 . LESSTHAN arith1
   62 leq: arith1 . LESSTHANOREQUAL arith1
   63 gt: arith1 . GREATERTHAN arith1
   64 geq: arith1 . GREATERTHANOREQUAL arith1
   65 eq: arith1 . EQUALTO arith1
   66 neq: arith1 . NOTEQUAL arith1
   67 or: arith1 . LOGICALOR arith1
   68 and: arith1 . LOGICALAND arith1

    MUL    shift, and go to state 219
    DIV    shift, and go to state 221
    MODOP  shift, and go to state 222

    LBRACKET    reduce using rule 18 (exp)
    LBRACKET    [reduce using rule 46 (add)]
    PLUSEQUAL   reduce using rule 18 (exp)
    PLUSEQUAL   [reduce using rule 46 (add)]
    SUBEQUAL    reduce using rule 18 (exp)
    SUBEQUAL    [reduce using rule 46 (add)]
    TIMESEQUAL  reduce using rule 18 (exp)
    TIMESEQUAL  [reduce using rule 46 (add)]
    DIVEQUAL    reduce using rule 18 (exp)
    DIVEQUAL    [reduce using rule 46 (add)]
    MODEQUAL    reduce using rule 18 (exp)
    MODEQUAL    [reduce using rule 46 (add)]
    ANDEQUAL    reduce using rule 18 (exp)
    ANDEQUAL    [reduce using rule 46 (add)]
    OREQUAL     reduce using rule 18 (exp)
    OREQUAL     [reduce using rule 46 (add)]
    EQU         reduce using rule 18 (exp)
    EQU         [reduce using rule 46 (add)]
    PERIOD      reduce using rule 18 (exp)
    PERIOD      [reduce using rule 46 (add)]
    $default    reduce using rule 46 (add)


State 265

   18 exp: arith1 .
   46 add: arith1 . ADD arith1
   47 sub: arith1 . SUB arith1
   48 mul: arith1 . MUL arith1
   49 div: arith1 . DIV arith1
   49    | arith1 DIV arith1 .
   50 mod: arith1 . MODOP arith1
   61 lt: arith1 . LESSTHAN arith1
   62 leq: arith1 . LESSTHANOREQUAL arith1
   63 gt: arith1 . GREATERTHAN arith1
   64 geq: arith1 . GREATERTHANOREQUAL arith1
   65 eq: arith1 . EQUALTO arith1
   66 neq: arith1 . NOTEQUAL arith1
   67 or: arith1 . LOGICALOR arith1
   68 and: arith1 . LOGICALAND arith1

    LBRACKET    reduce using rule 18 (exp)
    LBRACKET    [reduce using rule 49 (div)]
    PLUSEQUAL   reduce using rule 18 (exp)
    PLUSEQUAL   [reduce using rule 49 (div)]
    SUBEQUAL    reduce using rule 18 (exp)
    SUBEQUAL    [reduce using rule 49 (div)]
    TIMESEQUAL  reduce using rule 18 (exp)
    TIMESEQUAL  [reduce using rule 49 (div)]
    DIVEQUAL    reduce using rule 18 (exp)
    DIVEQUAL    [reduce using rule 49 (div)]
    MODEQUAL    reduce using rule 18 (exp)
    MODEQUAL    [reduce using rule 49 (div)]
    ANDEQUAL    reduce using rule 18 (exp)
    ANDEQUAL    [reduce using rule 49 (div)]
    OREQUAL     reduce using rule 18 (exp)
    OREQUAL     [reduce using rule 49 (div)]
    EQU         reduce using rule 18 (exp)
    EQU         [reduce using rule 49 (div)]
    PERIOD      reduce using rule 18 (exp)
    PERIOD      [reduce using rule 49 (div)]
    $default    reduce using rule 49 (div)


State 266

   18 exp: arith1 .
   46 add: arith1 . ADD arith1
   47 sub: arith1 . SUB arith1
   48 mul: arith1 . MUL arith1
   49 div: arith1 . DIV arith1
   50 mod: arith1 . MODOP arith1
   50    | arith1 MODOP arith1 .
   61 lt: arith1 . LESSTHAN arith1
   62 leq: arith1 . LESSTHANOREQUAL arith1
   63 gt: arith1 . GREATERTHAN arith1
   64 geq: arith1 . GREATERTHANOREQUAL arith1
   65 eq: arith1 . EQUALTO arith1
   66 neq: arith1 . NOTEQUAL arith1
   67 or: arith1 . LOGICALOR arith1
   68 and: arith1 . LOGICALAND arith1

    LBRACKET    reduce using rule 18 (exp)
    LBRACKET    [reduce using rule 50 (mod)]
    PLUSEQUAL   reduce using rule 18 (exp)
    PLUSEQUAL   [reduce using rule 50 (mod)]
    SUBEQUAL    reduce using rule 18 (exp)
    SUBEQUAL    [reduce using rule 50 (mod)]
    TIMESEQUAL  reduce using rule 18 (exp)
    TIMESEQUAL  [reduce using rule 50 (mod)]
    DIVEQUAL    reduce using rule 18 (exp)
    DIVEQUAL    [reduce using rule 50 (mod)]
    MODEQUAL    reduce using rule 18 (exp)
    MODEQUAL    [reduce using rule 50 (mod)]
    ANDEQUAL    reduce using rule 18 (exp)
    ANDEQUAL    [reduce using rule 50 (mod)]
    OREQUAL     reduce using rule 18 (exp)
    OREQUAL     [reduce using rule 50 (mod)]
    EQU         reduce using rule 18 (exp)
    EQU         [reduce using rule 50 (mod)]
    PERIOD      reduce using rule 18 (exp)
    PERIOD      [reduce using rule 50 (mod)]
    $default    reduce using rule 50 (mod)


State 267

   18 exp: arith1 .
   46 add: arith1 . ADD arith1
   47 sub: arith1 . SUB arith1
   48 mul: arith1 . MUL arith1
   49 div: arith1 . DIV arith1
   50 mod: arith1 . MODOP arith1
   61 lt: arith1 . LESSTHAN arith1
   62 leq: arith1 . LESSTHANOREQUAL arith1
   63 gt: arith1 . GREATERTHAN arith1
   64 geq: arith1 . GREATERTHANOREQUAL arith1
   65 eq: arith1 . EQUALTO arith1
   66 neq: arith1 . NOTEQUAL arith1
   67 or: arith1 . LOGICALOR arith1
   67   | arith1 LOGICALOR arith1 .
   68 and: arith1 . LOGICALAND arith1

    SUB                 shift, and go to state 218
    MUL                 shift, and go to state 219
    ADD                 shift, and go to state 220
    DIV                 shift, and go to state 221
    MODOP               shift, and go to state 222
    LOGICALAND          shift, and go to state 224
    EQUALTO             shift, and go to state 225
    NOTEQUAL            shift, and go to state 226
    LESSTHAN            shift, and go to state 227
    GREATERTHAN         shift, and go to state 228
    LESSTHANOREQUAL     shift, and go to state 229
    GREATERTHANOREQUAL  shift, and go to state 230

    LBRACKET    reduce using rule 18 (exp)
    LBRACKET    [reduce using rule 67 (or)]
    PLUSEQUAL   reduce using rule 18 (exp)
    PLUSEQUAL   [reduce using rule 67 (or)]
    SUBEQUAL    reduce using rule 18 (exp)
    SUBEQUAL    [reduce using rule 67 (or)]
    TIMESEQUAL  reduce using rule 18 (exp)
    TIMESEQUAL  [reduce using rule 67 (or)]
    DIVEQUAL    reduce using rule 18 (exp)
    DIVEQUAL    [reduce using rule 67 (or)]
    MODEQUAL    reduce using rule 18 (exp)
    MODEQUAL    [reduce using rule 67 (or)]
    ANDEQUAL    reduce using rule 18 (exp)
    ANDEQUAL    [reduce using rule 67 (or)]
    OREQUAL     reduce using rule 18 (exp)
    OREQUAL     [reduce using rule 67 (or)]
    EQU         reduce using rule 18 (exp)
    EQU         [reduce using rule 67 (or)]
    PERIOD      reduce using rule 18 (exp)
    PERIOD      [reduce using rule 67 (or)]
    $default    reduce using rule 67 (or)


State 268

   18 exp: arith1 .
   46 add: arith1 . ADD arith1
   47 sub: arith1 . SUB arith1
   48 mul: arith1 . MUL arith1
   49 div: arith1 . DIV arith1
   50 mod: arith1 . MODOP arith1
   61 lt: arith1 . LESSTHAN arith1
   62 leq: arith1 . LESSTHANOREQUAL arith1
   63 gt: arith1 . GREATERTHAN arith1
   64 geq: arith1 . GREATERTHANOREQUAL arith1
   65 eq: arith1 . EQUALTO arith1
   66 neq: arith1 . NOTEQUAL arith1
   67 or: arith1 . LOGICALOR arith1
   68 and: arith1 . LOGICALAND arith1
   68    | arith1 LOGICALAND arith1 .

    SUB                 shift, and go to state 218
    MUL                 shift, and go to state 219
    ADD                 shift, and go to state 220
    DIV                 shift, and go to state 221
    MODOP               shift, and go to state 222
    EQUALTO             shift, and go to state 225
    NOTEQUAL            shift, and go to state 226
    LESSTHAN            shift, and go to state 227
    GREATERTHAN         shift, and go to state 228
    LESSTHANOREQUAL     shift, and go to state 229
    GREATERTHANOREQUAL  shift, and go to state 230

    LBRACKET    reduce using rule 18 (exp)
    LBRACKET    [reduce using rule 68 (and)]
    PLUSEQUAL   reduce using rule 18 (exp)
    PLUSEQUAL   [reduce using rule 68 (and)]
    SUBEQUAL    reduce using rule 18 (exp)
    SUBEQUAL    [reduce using rule 68 (and)]
    TIMESEQUAL  reduce using rule 18 (exp)
    TIMESEQUAL  [reduce using rule 68 (and)]
    DIVEQUAL    reduce using rule 18 (exp)
    DIVEQUAL    [reduce using rule 68 (and)]
    MODEQUAL    reduce using rule 18 (exp)
    MODEQUAL    [reduce using rule 68 (and)]
    ANDEQUAL    reduce using rule 18 (exp)
    ANDEQUAL    [reduce using rule 68 (and)]
    OREQUAL     reduce using rule 18 (exp)
    OREQUAL     [reduce using rule 68 (and)]
    EQU         reduce using rule 18 (exp)
    EQU         [reduce using rule 68 (and)]
    PERIOD      reduce using rule 18 (exp)
    PERIOD      [reduce using rule 68 (and)]
    $default    reduce using rule 68 (and)


State 269

   18 exp: arith1 .
   46 add: arith1 . ADD arith1
   47 sub: arith1 . SUB arith1
   48 mul: arith1 . MUL arith1
   49 div: arith1 . DIV arith1
   50 mod: arith1 . MODOP arith1
   61 lt: arith1 . LESSTHAN arith1
   62 leq: arith1 . LESSTHANOREQUAL arith1
   63 gt: arith1 . GREATERTHAN arith1
   64 geq: arith1 . GREATERTHANOREQUAL arith1
   65 eq: arith1 . EQUALTO arith1
   65   | arith1 EQUALTO arith1 .
   66 neq: arith1 . NOTEQUAL arith1
   67 or: arith1 . LOGICALOR arith1
   68 and: arith1 . LOGICALAND arith1

    SUB    shift, and go to state 218
    MUL    shift, and go to state 219
    ADD    shift, and go to state 220
    DIV    shift, and go to state 221
    MODOP  shift, and go to state 222

    LBRACKET    reduce using rule 18 (exp)
    LBRACKET    [reduce using rule 65 (eq)]
    PLUSEQUAL   reduce using rule 18 (exp)
    PLUSEQUAL   [reduce using rule 65 (eq)]
    SUBEQUAL    reduce using rule 18 (exp)
    SUBEQUAL    [reduce using rule 65 (eq)]
    TIMESEQUAL  reduce using rule 18 (exp)
    TIMESEQUAL  [reduce using rule 65 (eq)]
    DIVEQUAL    reduce using rule 18 (exp)
    DIVEQUAL    [reduce using rule 65 (eq)]
    MODEQUAL    reduce using rule 18 (exp)
    MODEQUAL    [reduce using rule 65 (eq)]
    ANDEQUAL    reduce using rule 18 (exp)
    ANDEQUAL    [reduce using rule 65 (eq)]
    OREQUAL     reduce using rule 18 (exp)
    OREQUAL     [reduce using rule 65 (eq)]
    EQU         reduce using rule 18 (exp)
    EQU         [reduce using rule 65 (eq)]
    PERIOD      reduce using rule 18 (exp)
    PERIOD      [reduce using rule 65 (eq)]
    $default    reduce using rule 65 (eq)


State 270

   18 exp: arith1 .
   46 add: arith1 . ADD arith1
   47 sub: arith1 . SUB arith1
   48 mul: arith1 . MUL arith1
   49 div: arith1 . DIV arith1
   50 mod: arith1 . MODOP arith1
   61 lt: arith1 . LESSTHAN arith1
   62 leq: arith1 . LESSTHANOREQUAL arith1
   63 gt: arith1 . GREATERTHAN arith1
   64 geq: arith1 . GREATERTHANOREQUAL arith1
   65 eq: arith1 . EQUALTO arith1
   66 neq: arith1 . NOTEQUAL arith1
   66    | arith1 NOTEQUAL arith1 .
   67 or: arith1 . LOGICALOR arith1
   68 and: arith1 . LOGICALAND arith1

    SUB    shift, and go to state 218
    MUL    shift, and go to state 219
    ADD    shift, and go to state 220
    DIV    shift, and go to state 221
    MODOP  shift, and go to state 222

    LBRACKET    reduce using rule 18 (exp)
    LBRACKET    [reduce using rule 66 (neq)]
    PLUSEQUAL   reduce using rule 18 (exp)
    PLUSEQUAL   [reduce using rule 66 (neq)]
    SUBEQUAL    reduce using rule 18 (exp)
    SUBEQUAL    [reduce using rule 66 (neq)]
    TIMESEQUAL  reduce using rule 18 (exp)
    TIMESEQUAL  [reduce using rule 66 (neq)]
    DIVEQUAL    reduce using rule 18 (exp)
    DIVEQUAL    [reduce using rule 66 (neq)]
    MODEQUAL    reduce using rule 18 (exp)
    MODEQUAL    [reduce using rule 66 (neq)]
    ANDEQUAL    reduce using rule 18 (exp)
    ANDEQUAL    [reduce using rule 66 (neq)]
    OREQUAL     reduce using rule 18 (exp)
    OREQUAL     [reduce using rule 66 (neq)]
    EQU         reduce using rule 18 (exp)
    EQU         [reduce using rule 66 (neq)]
    PERIOD      reduce using rule 18 (exp)
    PERIOD      [reduce using rule 66 (neq)]
    $default    reduce using rule 66 (neq)


State 271

   18 exp: arith1 .
   46 add: arith1 . ADD arith1
   47 sub: arith1 . SUB arith1
   48 mul: arith1 . MUL arith1
   49 div: arith1 . DIV arith1
   50 mod: arith1 . MODOP arith1
   61 lt: arith1 . LESSTHAN arith1
   61   | arith1 LESSTHAN arith1 .
   62 leq: arith1 . LESSTHANOREQUAL arith1
   63 gt: arith1 . GREATERTHAN arith1
   64 geq: arith1 . GREATERTHANOREQUAL arith1
   65 eq: arith1 . EQUALTO arith1
   66 neq: arith1 . NOTEQUAL arith1
   67 or: arith1 . LOGICALOR arith1
   68 and: arith1 . LOGICALAND arith1

    SUB    shift, and go to state 218
    MUL    shift, and go to state 219
    ADD    shift, and go to state 220
    DIV    shift, and go to state 221
    MODOP  shift, and go to state 222

    LBRACKET    reduce using rule 18 (exp)
    LBRACKET    [reduce using rule 61 (lt)]
    PLUSEQUAL   reduce using rule 18 (exp)
    PLUSEQUAL   [reduce using rule 61 (lt)]
    SUBEQUAL    reduce using rule 18 (exp)
    SUBEQUAL    [reduce using rule 61 (lt)]
    TIMESEQUAL  reduce using rule 18 (exp)
    TIMESEQUAL  [reduce using rule 61 (lt)]
    DIVEQUAL    reduce using rule 18 (exp)
    DIVEQUAL    [reduce using rule 61 (lt)]
    MODEQUAL    reduce using rule 18 (exp)
    MODEQUAL    [reduce using rule 61 (lt)]
    ANDEQUAL    reduce using rule 18 (exp)
    ANDEQUAL    [reduce using rule 61 (lt)]
    OREQUAL     reduce using rule 18 (exp)
    OREQUAL     [reduce using rule 61 (lt)]
    EQU         reduce using rule 18 (exp)
    EQU         [reduce using rule 61 (lt)]
    PERIOD      reduce using rule 18 (exp)
    PERIOD      [reduce using rule 61 (lt)]
    $default    reduce using rule 61 (lt)


State 272

   18 exp: arith1 .
   46 add: arith1 . ADD arith1
   47 sub: arith1 . SUB arith1
   48 mul: arith1 . MUL arith1
   49 div: arith1 . DIV arith1
   50 mod: arith1 . MODOP arith1
   61 lt: arith1 . LESSTHAN arith1
   62 leq: arith1 . LESSTHANOREQUAL arith1
   63 gt: arith1 . GREATERTHAN arith1
   63   | arith1 GREATERTHAN arith1 .
   64 geq: arith1 . GREATERTHANOREQUAL arith1
   65 eq: arith1 . EQUALTO arith1
   66 neq: arith1 . NOTEQUAL arith1
   67 or: arith1 . LOGICALOR arith1
   68 and: arith1 . LOGICALAND arith1

    SUB    shift, and go to state 218
    MUL    shift, and go to state 219
    ADD    shift, and go to state 220
    DIV    shift, and go to state 221
    MODOP  shift, and go to state 222

    LBRACKET    reduce using rule 18 (exp)
    LBRACKET    [reduce using rule 63 (gt)]
    PLUSEQUAL   reduce using rule 18 (exp)
    PLUSEQUAL   [reduce using rule 63 (gt)]
    SUBEQUAL    reduce using rule 18 (exp)
    SUBEQUAL    [reduce using rule 63 (gt)]
    TIMESEQUAL  reduce using rule 18 (exp)
    TIMESEQUAL  [reduce using rule 63 (gt)]
    DIVEQUAL    reduce using rule 18 (exp)
    DIVEQUAL    [reduce using rule 63 (gt)]
    MODEQUAL    reduce using rule 18 (exp)
    MODEQUAL    [reduce using rule 63 (gt)]
    ANDEQUAL    reduce using rule 18 (exp)
    ANDEQUAL    [reduce using rule 63 (gt)]
    OREQUAL     reduce using rule 18 (exp)
    OREQUAL     [reduce using rule 63 (gt)]
    EQU         reduce using rule 18 (exp)
    EQU         [reduce using rule 63 (gt)]
    PERIOD      reduce using rule 18 (exp)
    PERIOD      [reduce using rule 63 (gt)]
    $default    reduce using rule 63 (gt)


State 273

   18 exp: arith1 .
   46 add: arith1 . ADD arith1
   47 sub: arith1 . SUB arith1
   48 mul: arith1 . MUL arith1
   49 div: arith1 . DIV arith1
   50 mod: arith1 . MODOP arith1
   61 lt: arith1 . LESSTHAN arith1
   62 leq: arith1 . LESSTHANOREQUAL arith1
   62    | arith1 LESSTHANOREQUAL arith1 .
   63 gt: arith1 . GREATERTHAN arith1
   64 geq: arith1 . GREATERTHANOREQUAL arith1
   65 eq: arith1 . EQUALTO arith1
   66 neq: arith1 . NOTEQUAL arith1
   67 or: arith1 . LOGICALOR arith1
   68 and: arith1 . LOGICALAND arith1

    SUB    shift, and go to state 218
    MUL    shift, and go to state 219
    ADD    shift, and go to state 220
    DIV    shift, and go to state 221
    MODOP  shift, and go to state 222

    LBRACKET    reduce using rule 18 (exp)
    LBRACKET    [reduce using rule 62 (leq)]
    PLUSEQUAL   reduce using rule 18 (exp)
    PLUSEQUAL   [reduce using rule 62 (leq)]
    SUBEQUAL    reduce using rule 18 (exp)
    SUBEQUAL    [reduce using rule 62 (leq)]
    TIMESEQUAL  reduce using rule 18 (exp)
    TIMESEQUAL  [reduce using rule 62 (leq)]
    DIVEQUAL    reduce using rule 18 (exp)
    DIVEQUAL    [reduce using rule 62 (leq)]
    MODEQUAL    reduce using rule 18 (exp)
    MODEQUAL    [reduce using rule 62 (leq)]
    ANDEQUAL    reduce using rule 18 (exp)
    ANDEQUAL    [reduce using rule 62 (leq)]
    OREQUAL     reduce using rule 18 (exp)
    OREQUAL     [reduce using rule 62 (leq)]
    EQU         reduce using rule 18 (exp)
    EQU         [reduce using rule 62 (leq)]
    PERIOD      reduce using rule 18 (exp)
    PERIOD      [reduce using rule 62 (leq)]
    $default    reduce using rule 62 (leq)


State 274

   18 exp: arith1 .
   46 add: arith1 . ADD arith1
   47 sub: arith1 . SUB arith1
   48 mul: arith1 . MUL arith1
   49 div: arith1 . DIV arith1
   50 mod: arith1 . MODOP arith1
   61 lt: arith1 . LESSTHAN arith1
   62 leq: arith1 . LESSTHANOREQUAL arith1
   63 gt: arith1 . GREATERTHAN arith1
   64 geq: arith1 . GREATERTHANOREQUAL arith1
   64    | arith1 GREATERTHANOREQUAL arith1 .
   65 eq: arith1 . EQUALTO arith1
   66 neq: arith1 . NOTEQUAL arith1
   67 or: arith1 . LOGICALOR arith1
   68 and: arith1 . LOGICALAND arith1

    SUB    shift, and go to state 218
    MUL    shift, and go to state 219
    ADD    shift, and go to state 220
    DIV    shift, and go to state 221
    MODOP  shift, and go to state 222

    LBRACKET    reduce using rule 18 (exp)
    LBRACKET    [reduce using rule 64 (geq)]
    PLUSEQUAL   reduce using rule 18 (exp)
    PLUSEQUAL   [reduce using rule 64 (geq)]
    SUBEQUAL    reduce using rule 18 (exp)
    SUBEQUAL    [reduce using rule 64 (geq)]
    TIMESEQUAL  reduce using rule 18 (exp)
    TIMESEQUAL  [reduce using rule 64 (geq)]
    DIVEQUAL    reduce using rule 18 (exp)
    DIVEQUAL    [reduce using rule 64 (geq)]
    MODEQUAL    reduce using rule 18 (exp)
    MODEQUAL    [reduce using rule 64 (geq)]
    ANDEQUAL    reduce using rule 18 (exp)
    ANDEQUAL    [reduce using rule 64 (geq)]
    OREQUAL     reduce using rule 18 (exp)
    OREQUAL     [reduce using rule 64 (geq)]
    EQU         reduce using rule 18 (exp)
    EQU         [reduce using rule 64 (geq)]
    PERIOD      reduce using rule 18 (exp)
    PERIOD      [reduce using rule 64 (geq)]
    $default    reduce using rule 64 (geq)


State 275

   96 if: if ELSE block .

    $default  reduce using rule 96 (if)


State 276

  190 enum_con: id CLASSACCESS id .

    $default  reduce using rule 190 (enum_con)


State 277

  133 fn_arg: fn_call .

    $default  reduce using rule 133 (fn_arg)


State 278

  126 fn_call: id LPAREN fn_args . RPAREN

    RPAREN  shift, and go to state 297


State 279

  127 fn_args: fn_arg . fn_args
  129 fn_arg: fn_arg . COMMA

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    COMMA      shift, and go to state 298

    $default  reduce using rule 128 (fn_args)

    fn_call     go to state 277
    fn_args     go to state 299
    fn_arg      go to state 279
    lit         go to state 280
    p_lit       go to state 171
    id          go to state 281
    box_new     go to state 282
    arg_struct  go to state 283
    enum_con    go to state 176


State 280

  130 fn_arg: lit .

    $default  reduce using rule 130 (fn_arg)


State 281

  126 fn_call: id . LPAREN fn_args RPAREN
  131 fn_arg: id .
  184 arg_struct: id . LSQUIGBRACKET body RSQUIGBRACKET
  190 enum_con: id . CLASSACCESS id

    CLASSACCESS    shift, and go to state 232
    LPAREN         shift, and go to state 233
    LSQUIGBRACKET  shift, and go to state 234

    $default  reduce using rule 131 (fn_arg)


State 282

  132 fn_arg: box_new .

    $default  reduce using rule 132 (fn_arg)


State 283

  134 fn_arg: arg_struct .

    $default  reduce using rule 134 (fn_arg)


State 284

  188 param_arg: id . COLON exp

    COLON  shift, and go to state 300


State 285

  184 arg_struct: id LSQUIGBRACKET body . RSQUIGBRACKET

    RSQUIGBRACKET  shift, and go to state 301


State 286

  185 body: param_arg . body
  186     | param_arg .
  187 param_arg: param_arg . COMMA

    ID     shift, and go to state 10
    COMMA  shift, and go to state 302

    $default  reduce using rule 186 (body)

    id         go to state 284
    body       go to state 303
    param_arg  go to state 286


State 287

  189 enum_con: enum_con LPAREN exps . RPAREN

    RPAREN  shift, and go to state 304


State 288

  172 type_arr: LBRACKET type SEMICOLON p_lit RBRACKET .

    $default  reduce using rule 172 (type_arr)


State 289

  175 box_new: BOX CLASSACCESS NEW LPAREN . exp RPAREN

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exp           go to state 305
    arith1        go to state 134
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 290

   95 if: IF LPAREN exp RPAREN . block

    LSQUIGBRACKET  shift, and go to state 101

    block  go to state 306


State 291

   88 let: LET pat COLON type . EQU exp
   89    | LET pat COLON type .

    EQU  shift, and go to state 307

    $default  reduce using rule 89 (let)


State 292

   80 assign: exp . EQU exp
   81       | exp . PLUSEQUAL exp
   82       | exp . SUBEQUAL exp
   83       | exp . DIVEQUAL exp
   84       | exp . TIMESEQUAL exp
   85       | exp . MODEQUAL exp
   86       | exp . ANDEQUAL exp
   87       | exp . OREQUAL exp
   90 let: LET pat EQU exp .
   92 field_lookup: exp . PERIOD id
  123 arr_index: exp . LBRACKET exp RBRACKET

    LBRACKET    shift, and go to state 208
    PLUSEQUAL   shift, and go to state 209
    SUBEQUAL    shift, and go to state 210
    TIMESEQUAL  shift, and go to state 211
    DIVEQUAL    shift, and go to state 212
    MODEQUAL    shift, and go to state 213
    ANDEQUAL    shift, and go to state 214
    OREQUAL     shift, and go to state 215
    EQU         shift, and go to state 216
    PERIOD      shift, and go to state 217

    $default  reduce using rule 90 (let)


State 293

   97 match: MATCH LPAREN exp RPAREN . LSQUIGBRACKET match_arms RSQUIGBRACKET

    LSQUIGBRACKET  shift, and go to state 308


State 294

   93 while: WHILE LPAREN exp RPAREN . block

    LSQUIGBRACKET  shift, and go to state 101

    block  go to state 309


State 295

   15 exps: exp COMMA exps .

    $default  reduce using rule 15 (exps)


State 296

  123 arr_index: exp LBRACKET exp RBRACKET .

    $default  reduce using rule 123 (arr_index)


State 297

  126 fn_call: id LPAREN fn_args RPAREN .

    $default  reduce using rule 126 (fn_call)


State 298

  129 fn_arg: fn_arg COMMA .

    $default  reduce using rule 129 (fn_arg)


State 299

  127 fn_args: fn_arg fn_args .

    $default  reduce using rule 127 (fn_args)


State 300

  188 param_arg: id COLON . exp

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    ID        [reduce using rule 29 (exp)]
    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exp           go to state 310
    arith1        go to state 134
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 301

  184 arg_struct: id LSQUIGBRACKET body RSQUIGBRACKET .

    $default  reduce using rule 184 (arg_struct)


State 302

  187 param_arg: param_arg COMMA .

    $default  reduce using rule 187 (param_arg)


State 303

  185 body: param_arg body .

    $default  reduce using rule 185 (body)


State 304

  189 enum_con: enum_con LPAREN exps RPAREN .

    $default  reduce using rule 189 (enum_con)


State 305

   80 assign: exp . EQU exp
   81       | exp . PLUSEQUAL exp
   82       | exp . SUBEQUAL exp
   83       | exp . DIVEQUAL exp
   84       | exp . TIMESEQUAL exp
   85       | exp . MODEQUAL exp
   86       | exp . ANDEQUAL exp
   87       | exp . OREQUAL exp
   92 field_lookup: exp . PERIOD id
  123 arr_index: exp . LBRACKET exp RBRACKET
  175 box_new: BOX CLASSACCESS NEW LPAREN exp . RPAREN

    LBRACKET    shift, and go to state 208
    RPAREN      shift, and go to state 311
    PLUSEQUAL   shift, and go to state 209
    SUBEQUAL    shift, and go to state 210
    TIMESEQUAL  shift, and go to state 211
    DIVEQUAL    shift, and go to state 212
    MODEQUAL    shift, and go to state 213
    ANDEQUAL    shift, and go to state 214
    OREQUAL     shift, and go to state 215
    EQU         shift, and go to state 216
    PERIOD      shift, and go to state 217


State 306

   95 if: IF LPAREN exp RPAREN block .

    $default  reduce using rule 95 (if)


State 307

   88 let: LET pat COLON type EQU . exp

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    BOX        shift, and go to state 118
    IF         shift, and go to state 119
    LOOP       shift, and go to state 121
    MATCH      shift, and go to state 122
    WHILE      shift, and go to state 124
    LBRACKET   shift, and go to state 125
    LPAREN     shift, and go to state 126
    SUB        shift, and go to state 127
    MUL        shift, and go to state 128
    NOT        shift, and go to state 129
    AND        shift, and go to state 130

    LBRACKET  [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    exp           go to state 312
    arith1        go to state 134
    arith2        go to state 135
    arith3        go to state 136
    arith4        go to state 137
    add           go to state 138
    sub           go to state 139
    mul           go to state 140
    div           go to state 141
    mod           go to state 142
    neg           go to state 143
    comp          go to state 144
    lt            go to state 145
    leq           go to state 146
    gt            go to state 147
    geq           go to state 148
    eq            go to state 149
    neq           go to state 150
    or            go to state 151
    and           go to state 152
    not           go to state 153
    ptr           go to state 154
    addr          go to state 155
    deref         go to state 156
    addr_of_mut   go to state 157
    unit          go to state 158
    assign        go to state 159
    field_lookup  go to state 161
    while         go to state 162
    loop          go to state 163
    if            go to state 164
    match         go to state 165
    arr           go to state 166
    arr_index     go to state 167
    fn_call       go to state 169
    lit           go to state 170
    p_lit         go to state 171
    id            go to state 172
    box_new       go to state 173
    arg_struct    go to state 175
    enum_con      go to state 176


State 308

   97 match: MATCH LPAREN exp RPAREN LSQUIGBRACKET . match_arms RSQUIGBRACKET

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    MUT        shift, and go to state 26
    REF        shift, and go to state 27
    LBRACKET   shift, and go to state 28
    LPAREN     shift, and go to state 29
    SUB        shift, and go to state 30
    AND        shift, and go to state 31
    WC         shift, and go to state 32

    match_arms  go to state 313
    match_arm   go to state 314
    match_pats  go to state 315
    pat         go to state 316
    pat_arr     go to state 34
    pat_struct  go to state 35
    p_lit       go to state 36
    id          go to state 37
    pat_enum    go to state 41


State 309

   93 while: WHILE LPAREN exp RPAREN block .

    $default  reduce using rule 93 (while)


State 310

   80 assign: exp . EQU exp
   81       | exp . PLUSEQUAL exp
   82       | exp . SUBEQUAL exp
   83       | exp . DIVEQUAL exp
   84       | exp . TIMESEQUAL exp
   85       | exp . MODEQUAL exp
   86       | exp . ANDEQUAL exp
   87       | exp . OREQUAL exp
   92 field_lookup: exp . PERIOD id
  123 arr_index: exp . LBRACKET exp RBRACKET
  188 param_arg: id COLON exp .

    LBRACKET    shift, and go to state 208
    PLUSEQUAL   shift, and go to state 209
    SUBEQUAL    shift, and go to state 210
    TIMESEQUAL  shift, and go to state 211
    DIVEQUAL    shift, and go to state 212
    MODEQUAL    shift, and go to state 213
    ANDEQUAL    shift, and go to state 214
    OREQUAL     shift, and go to state 215
    EQU         shift, and go to state 216
    PERIOD      shift, and go to state 217

    $default  reduce using rule 188 (param_arg)


State 311

  175 box_new: BOX CLASSACCESS NEW LPAREN exp RPAREN .

    $default  reduce using rule 175 (box_new)


State 312

   80 assign: exp . EQU exp
   81       | exp . PLUSEQUAL exp
   82       | exp . SUBEQUAL exp
   83       | exp . DIVEQUAL exp
   84       | exp . TIMESEQUAL exp
   85       | exp . MODEQUAL exp
   86       | exp . ANDEQUAL exp
   87       | exp . OREQUAL exp
   88 let: LET pat COLON type EQU exp .
   92 field_lookup: exp . PERIOD id
  123 arr_index: exp . LBRACKET exp RBRACKET

    LBRACKET    shift, and go to state 208
    PLUSEQUAL   shift, and go to state 209
    SUBEQUAL    shift, and go to state 210
    TIMESEQUAL  shift, and go to state 211
    DIVEQUAL    shift, and go to state 212
    MODEQUAL    shift, and go to state 213
    ANDEQUAL    shift, and go to state 214
    OREQUAL     shift, and go to state 215
    EQU         shift, and go to state 216
    PERIOD      shift, and go to state 217

    $default  reduce using rule 88 (let)


State 313

   97 match: MATCH LPAREN exp RPAREN LSQUIGBRACKET match_arms . RSQUIGBRACKET

    RSQUIGBRACKET  shift, and go to state 317


State 314

   98 match_arms: match_arm . COMMA match_arms
   99           | match_arm .

    COMMA  shift, and go to state 318

    $default  reduce using rule 99 (match_arms)


State 315

  100 match_arm: match_pats . PIPE block

    PIPE  shift, and go to state 319


State 316

  101 match_pats: pat . OR match_pats
  102           | pat .

    OR  shift, and go to state 320

    $default  reduce using rule 102 (match_pats)


State 317

   97 match: MATCH LPAREN exp RPAREN LSQUIGBRACKET match_arms RSQUIGBRACKET .

    $default  reduce using rule 97 (match)


State 318

   98 match_arms: match_arm COMMA . match_arms

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    MUT        shift, and go to state 26
    REF        shift, and go to state 27
    LBRACKET   shift, and go to state 28
    LPAREN     shift, and go to state 29
    SUB        shift, and go to state 30
    AND        shift, and go to state 31
    WC         shift, and go to state 32

    match_arms  go to state 321
    match_arm   go to state 314
    match_pats  go to state 315
    pat         go to state 316
    pat_arr     go to state 34
    pat_struct  go to state 35
    p_lit       go to state 36
    id          go to state 37
    pat_enum    go to state 41


State 319

  100 match_arm: match_pats PIPE . block

    LSQUIGBRACKET  shift, and go to state 101

    block  go to state 322


State 320

  101 match_pats: pat OR . match_pats

    LITCHAR    shift, and go to state 22
    LITSTRING  shift, and go to state 23
    LITDEC     shift, and go to state 24
    LITBOOL    shift, and go to state 25
    ID         shift, and go to state 10
    MUT        shift, and go to state 26
    REF        shift, and go to state 27
    LBRACKET   shift, and go to state 28
    LPAREN     shift, and go to state 29
    SUB        shift, and go to state 30
    AND        shift, and go to state 31
    WC         shift, and go to state 32

    match_pats  go to state 323
    pat         go to state 316
    pat_arr     go to state 34
    pat_struct  go to state 35
    p_lit       go to state 36
    id          go to state 37
    pat_enum    go to state 41


State 321

   98 match_arms: match_arm COMMA match_arms .

    $default  reduce using rule 98 (match_arms)


State 322

  100 match_arm: match_pats PIPE block .

    $default  reduce using rule 100 (match_arm)


State 323

  101 match_pats: pat OR match_pats .

    $default  reduce using rule 101 (match_pats)
